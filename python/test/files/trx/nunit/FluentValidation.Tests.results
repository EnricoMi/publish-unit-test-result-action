publish.unittestresults.ParsedUnitTestResults(
  files=1,
  errors=[],
  suites=1,
  suite_tests=804,
  suite_skipped=1,
  suite_failures=0,
  suite_errors=0,
  suite_time=3,
  suite_details=[
    publish.unittestresults.UnitTestSuite(
      name='MSTestSuite',
      tests=804,
      skipped=1,
      failures=0,
      errors=0,
      stdout=None,
      stderr=None
    )
  ],
  cases=[
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ValidatorTesterTester',
      test_name='ShouldNotHaveValidationError_async_model_throws',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0011796
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ChildRulesTests',
      test_name='ChildRules_works_with_RuleSet',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0058553
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.NotEqualValidatorTests',
      test_name='Should_store_comparison_type',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0004205
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ValidatorTesterTester',
      test_name='Tests_nested_property_reverse',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0004663
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ConditionTests',
      test_name='Validation_should_fail_when_condition_matches',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=7.55e-05
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ConditionTests',
      test_name='Async_condition_is_applied_to_single_validator_in_the_chain_when_Appl'
        'yConditionTo_set_to_CurrentValidator',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.000818
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.LessThanOrEqualToValidatorTester',
      test_name='Validates_with_nullable_property',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0005804
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ForEachRuleTests',
      test_name='Regular_rules_can_drop_into_RuleForEach',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0008814
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ChainedValidationTester',
      test_name='Chained_property_should_be_excluded',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0001883
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ValidatorTesterTester',
      test_name='ShouldHaveValidationError_should_throw_when_there_are_no_validation_e'
        'rrors_with_preconstructed_object',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0008107
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ConditionTests',
      test_name='Validation_should_fail_when_condition_does_not_match',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=8.88e-05
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.MessageFormatterTests',
      test_name='Should_ignore_unknown_parameters',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0008556
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ExclusiveBetweenValidatorTests',
      test_name='To_and_from_properties_should_be_set_for_dates',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=9.18e-05
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.SharedConditionTests',
      test_name='Runs_otherwise_conditions_for_When',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.000563
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.DefaultValidatorExtensionTester',
      test_name='GreaterThanOrEqual_should_create_GreaterThanOrEqualValidator_with_exp'
        'licit_value',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0002869
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ExactLengthValidatorTester',
      test_name='When_the_text_length_is_larger_the_validator_should_fail',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0002571
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.SharedConditionTests',
      test_name='Executes_customasync_rule_when_async_condition_true',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0011516
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.RegularExpressionValidatorTests',
      test_name='When_the_text_matches_the_lambda_regular_expression_then_the_validato'
        'r_should_pass',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0003275
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.RegularExpressionValidatorTests',
      test_name='When_validation_fails_the_default_error_should_be_set',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0001265
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.UserStateTester',
      test_name='Throws_when_provider_is_null',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0002016
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ValidatorTesterTester',
      test_name='ShouldNotHaveValidationError_should_not_throw_when_there_are_no_error'
        's',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0008221
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.StringEnumValidatorTests',
      test_name='When_the_property_is_initialized_with_invalid_string_then_the_validat'
        'or_should_fail',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=9.87e-05
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.LessThanValidatorTester',
      test_name='Extracts_property_from_constant_using_expression',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=6.78e-05
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.RulesetTests',
      test_name='Includes_combination_of_rulesets_async',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0010528
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.TrackingCollectionTests',
      test_name='Should_not_raise_event_once_handler_detached',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0001609
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ExclusiveBetweenValidatorTests',
      test_name='When_the_validator_fails_the_error_message_should_be_set',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0002535
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.DefaultValidatorExtensionTester',
      test_name='NotEqual_should_create_NotEqualValidator_with_lambda',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0005555
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.MessageFormatterTests',
      test_name='Should_ignore_unknown_numbered_parameters',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0001013
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.EqualValidatorTests',
      test_name='When_the_objects_are_equal_validation_should_succeed',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0003395
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ValidatorSelectorTests',
      test_name='Validates_nullable_property_with_overriden_name_when_selected',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0019595
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ExclusiveBetweenValidatorTests',
      test_name='Validates_with_nullable_when_property_not_null',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0006361
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.CascadingFailuresTester',
      test_name='Validation_stops_on_first_failure_when_set_to_StopOnFirstFailure_at_v'
        'alidator_level_async_legacy',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0008011
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.TransformTests',
      test_name='Transforms_collection_element',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0008965
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.RegularExpressionValidatorTests',
      test_name='When_the_text_matches_the_regular_expression_then_the_validator_shoul'
        'd_pass',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.001805
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.RuleDependencyTests',
      test_name='Nested_dependent_rules_inside_ruleset_no_result_when_second_level_fai'
        'ls',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0005888
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.UserSeverityTester',
      test_name='Throws_when_provider_is_null',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0001945
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ValidatorTesterTester',
      test_name='ShouldHaveValidationError_Should_throw_when_there_are_no_validation_e'
        'rrors',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0008389
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ConditionTests',
      test_name='Validation_should_succeed_when_async_condition_does_not_match',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.000355
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.RulesetTests',
      test_name='Includes_combination_of_rulesets',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0006445
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.AbstractValidatorTester',
      test_name='WhenPreValidationReturnsFalse_ResultReturnToUserImmediatly_ValidateAs'
        'ync(preValidationResult: )',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0009155
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.GreaterThanValidatorTester',
      test_name='Validates_with_nullable_when_property_not_null',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0002583
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.UserSeverityTester',
      test_name='Can_Provide_conditional_severity',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0002891
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.EmailValidatorTests',
      test_name='Fails_email_validation_aspnetcore_compatible(email: " \\r \\t \\n")',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=2.47e-05
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.SharedConditionTests',
      test_name='Nested_async_conditions_with_CustomAsync_rule',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0009986
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.EnumValidatorTests',
      test_name='When_the_enum_is_not_initialized_with_valid_value_then_the_validator_'
        'should_fail',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=8.19e-05
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.CascadingFailuresTester',
      test_name='Validation_stops_on_failure_when_set_to_Continue_and_overriden_at_rul'
        'e_level_legacy',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0002166
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.EmptyTester',
      test_name='When_validation_fails_error_should_be_set',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0002342
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ValidatorTesterTester',
      test_name='ShouldNotHaveValidationError_Should_support_nested_properties',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0009315
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.NotEmptyTester',
      test_name='When_value_is_null_validator_should_fail',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0002923
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.RegularExpressionValidatorTests',
      test_name='Uses_lazily_loaded_expression_with_options',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.001451
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.AbstractValidatorTester',
      test_name='Should_not_main_state',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0001976
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ForEachRuleTests',
      test_name='Can_use_cascade_with_RuleForEach',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0006943
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.CascadingFailuresTester',
      test_name='Validation_continues_on_failure_when_set_to_Stop_globally_and_overrid'
        'en_at_rule_level_async_legacy',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0014877
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.CustomValidatorTester',
      test_name='New_Custom_When_property_name_omitted_infers_property_name',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0002338
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.SharedConditionTests',
      test_name='Rules_invoke_when_inverse_shared_async_condition_matches',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.000943
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.CollectionValidatorWithParentTests',
      test_name='Skips_null_items',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0005809
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.NullTester',
      test_name='Not_null_validator_should_not_crash_with_non_nullable_value_type',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0005603
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ComplexValidationTester',
      test_name='Should_override_propertyName',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0007523
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.EmailValidatorTests',
      test_name='Valid_email_addresses_aspnetcore_compatible(email: '
        '"someName@some_domain.com")',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=1.62e-05
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.EnumValidatorTests',
      test_name='Flags_enum_validates_correctly_when_using_zero_value',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0003854
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.NotEqualValidatorTests',
      test_name='When_the_validator_fails_the_error_message_should_be_set',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0002574
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.LengthValidatorTests',
      test_name='When_the_minlength_validator_fails_the_error_message_should_be_set',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0003529
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.LanguageManagerTests',
      test_name='Gets_translation_for_culture',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=7.41e-05
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ValidatorDescriptorTester',
      test_name='GetValidatorsForMember_and_GetRulesForMember_can_both_retrieve_for_mo'
        'del_level_rule',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0003935
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.RuleDependencyTests',
      test_name='Nested_dependent_rules',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0005419
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.RulesetTests',
      test_name='Combines_rulesets_and_explicit_properties_async',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.001092
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.SharedConditionTests',
      test_name='Rules_invoke_when_inverse_shared_condition_matches',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0001103
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.LessThanOrEqualToValidatorTester',
      test_name='Should_fail_when_greater_than_input',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=8.53e-05
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.CollectionValidatorWithParentTests',
      test_name='Async_condition_should_work_with_child_collection',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0007258
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.UserSeverityTester',
      test_name='Stores_user_severity_against_validation_failure',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0002021
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.PredicateValidatorTester',
      test_name='Should_throw_when_predicate_is_null',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0003168
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.AbstractValidatorTester',
      test_name='Should_validate_single_property',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0002735
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.GreaterThanValidatorTester',
      test_name='Should_fail_when_equal_to_input',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=7.29e-05
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.CascadingFailuresTester',
      test_name='Validation_stops_on_first_Failure_when_set_to_Continue_globally_and_o'
        'verriden_at_rule_level_and_async_validator_is_invoked_synchronously',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0004818
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.RulesetTests',
      test_name='Executes_in_rule_in_default_and_none',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.000354
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.RuleBuilderTests',
      test_name='Should_throw_when_inverse_predicate_is_null',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0003373
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.InheritanceValidatorTest',
      test_name='Validates_inheritance_hierarchy',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0005062
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ConditionTests',
      test_name='Async_condition_executed_synchronosuly_with_asynchronous_collection_r'
        'ule',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0003309
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.InclusiveBetweenValidatorTests',
      test_name='When_the_validator_fails_the_error_message_should_be_set_for_strings',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0002385
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.EmailValidatorTests',
      test_name='Valid_email_addresses_aspnetcore_compatible(email: null)',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0002029
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ValidatorTesterTester',
      test_name='Matches_any_failure',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0006901
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.AbstractValidatorTester',
      test_name='Validates_type_when_using_non_generic_validate_overload',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0001769
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.LessThanOrEqualToValidatorTester',
      test_name='Validates_with_property',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.000321
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.RuleBuilderTests',
      test_name='Calling_ValidateAsync_should_delegate_to_underlying_async_validator',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0134579
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.LanguageManagerTests',
      test_name='Gets_translation_for_serbian_culture(cultureName: "sr")',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0004456
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.LengthValidatorTests',
      test_name='When_the_max_is_smaller_than_the_min_then_the_validator_should_throw',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0004785
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.EmptyTester',
      test_name='Passes_when_collection_empty',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.00027
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.NotNullTester',
      test_name='NotNullValidator_should_fail_if_value_is_null',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0002029
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.GreaterThanOrEqualToValidatorTester',
      test_name='Validates_with_property',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0002879
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ValidatorTesterTester',
      test_name='ShouldHaveValidationError_with_an_unmatched_rule_and_a_single_error_s'
        'hould_throw_an_exception',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0006954
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.MessageFormatterTests',
      test_name='Format_property_value',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0002165
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.LanguageManagerTests',
      test_name='Falls_back_to_english_when_culture_not_registered',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0002145
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ValidateAndThrowTester',
      test_name='Only_root_validator_throws',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0007993
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.OnFailureTests',
      test_name='WhenAsyncWithOnFailure_should_invoke_condition_on_inner_validator',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0014785
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.AccessorCacheTests',
      test_name='Identifies_if_memberexp_acts_on_model_instance',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0002977
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.CascadingFailuresTester',
      test_name='Validation_continues_on_failure_when_set_to_Stop_globally_and_overrid'
        'en_at_rule_level_legacy',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0005266
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.RuleBuilderTests',
      test_name='Result_should_use_custom_property_name_when_no_property_name_can_be_d'
        'etermined',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0005762
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ExactLengthValidatorTester',
      test_name='When_exact_length_rule_failes_error_should_have_exact_length_error_er'
        'rorcode',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0006217
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.EnumValidatorTests',
      test_name='Flags_enum_with_overlapping_flags_valid_when_using_bitwise_value',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.000299
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.CascadingFailuresTester',
      test_name='Validation_stops_on_first_Failure_when_set_to_Continue_globally_and_o'
        'verriden_at_rule_level_async',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.000813
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ValidateAndThrowTester',
      test_name='Throws_exception_with_a_ruleset',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0007043
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.RulesetTests',
      test_name='Ruleset_cascades_to_child_validator',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0005176
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.NotEqualValidatorTests',
      test_name='Should_handle_custom_value_types_correctly',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0022529
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.LocalisedMessagesTester',
      test_name='Does_not_throw_InvalidCastException_when_using_RuleForEach',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0004547
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ValidatorDescriptorTester',
      test_name='Returns_empty_collection_for_property_with_no_validators',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=8.85e-05
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.GreaterThanValidatorTester',
      test_name='Should_succeed_when_greater_than_input',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=8.6e-05
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.DefaultValidatorExtensionTester',
      test_name='GreaterThan_should_create_GreaterThanValidator_with_lambda',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0004794
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ForEachRuleTests',
      test_name='Executes_rule_for_each_item_in_collection_async',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0007972
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.GreaterThanValidatorTester',
      test_name='Should_fail_when_less_than_input',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=7.64e-05
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.RuleBuilderTests',
      test_name='Conditional_child_validator_should_register_with_validator_type_not_p'
        'roperty',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0003936
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.EmailValidatorTests',
      test_name='Invalid_email_addressex_regex(email: "testperso")',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=3.95e-05
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ForEachRuleTests',
      test_name='Collection_should_be_explicitly_included_with_expression',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0007823
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.AbstractValidatorTester',
      test_name='Should_throw_for_non_member_expression_when_validating_single_propert'
        'y',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0002162
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.RuleBuilderTests',
      test_name='Adding_a_validator_should_store_validator',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=8.07e-05
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.RuleDependencyTests',
      test_name='Async_inside_dependent_rules',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=1.5056573
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.CustomValidatorTester',
      test_name='New_Custom_Returns_single_failure_async',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.000586
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.AbstractValidatorTester',
      test_name='Should_validate_single_property_where_property_as_string',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0003409
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.LanguageManagerTests',
      test_name='Can_replace_message_without_overriding_all_languages',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0001258
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.AbstractValidatorTester',
      test_name='WithName_should_override_field_name_with_value_from_other_property',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0002316
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.EmailValidatorTests',
      test_name='Valid_email_addresses_regex(email: '
        '"customer/department=shipping@example.com")',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=2.34e-05
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ExclusiveBetweenValidatorTests',
      test_name='To_and_from_properties_should_be_set',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=6.68e-05
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ValidatorTesterTester',
      test_name='ShouldHaveValidationError_should_not_throw_when_there_are_validation_'
        'errors__WhenAsyn_is_used(age: 42, cardNumber: null)',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.000746
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ComplexValidationTester',
      test_name='Multiple_rules_in_chain_with_childvalidator_shouldnt_reuse_accessor_a'
        'sync',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0057314
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.InheritanceValidatorTest',
      test_name='Validates_with_callback_async',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0011748
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.CascadingFailuresTester',
      test_name='Validation_stops_on_first_failure_async',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0007821
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ComplexValidationTester',
      test_name='Validates_complex_property',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0009826
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.EqualValidatorTests',
      test_name='Should_use_ordinal_comparison_by_default',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0001642
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ValidatorSelectorTests',
      test_name='Executes_correct_rule_when_using_property_with_include_async',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0017452
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.CollectionValidatorWithParentTests',
      test_name='Validates_collection',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0010225
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.GreaterThanOrEqualToValidatorTester',
      test_name='Should_localize_value',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0008092
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.GreaterThanOrEqualToValidatorTester',
      test_name='Comparison_property_uses_custom_resolver',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0005497
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.CascadingFailuresTester',
      test_name='Validation_stops_on_failure_when_set_to_Continue_and_overriden_at_rul'
        'e_level_async_legacy',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0008677
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.CascadingFailuresTester',
      test_name='Validation_continues_on_failure',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0001733
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.CustomMessageFormatTester',
      test_name='Uses_custom_delegate_for_building_message',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0005953
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.MemberAccessorTests',
      test_name='SimplePropertyGet',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0004082
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.LanguageManagerTests',
      test_name='Falls_back_to_default_localization_key_when_error_code_key_not_found',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0002815
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.GreaterThanOrEqualToValidatorTester',
      test_name='Should_set_default_error_when_validation_fails',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0001125
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.AbstractValidatorTester',
      test_name='Should_be_valid_when_there_are_no_failures_for_single_property',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0001968
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.DefaultValidatorExtensionTester',
      test_name='Must_should_create_PredicateValidator_with_context',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0008328
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.EmailValidatorTests',
      test_name='Fails_email_validation_aspnetcore_compatible(email: '
        '"@someDomain@abc.com")',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=2.34e-05
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.NotEmptyTester',
      test_name='Fails_when_collection_empty',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0005821
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.EmptyTester',
      test_name='When_value_is_Default_for_type_validator_should_pass_datetime',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0003325
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.MemberAccessorTests',
      test_name='ComplexPropertySet',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0004413
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.LessThanValidatorTester',
      test_name='Validates_with_nullable_when_property_not_null_cross_property',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0002708
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ForEachRuleTests',
      test_name='When_runs_outside_RuleForEach_loop_async',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0012558
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ModelLevelValidatorTests',
      test_name='Validates_at_model_level',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0003216
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.LocalisedMessagesTester',
      test_name='Uses_string_format_with_property_value',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0007191
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ForEachRuleTests',
      test_name='Nested_collection_for_null_property_should_not_throw_null_reference',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0004414
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.LessThanValidatorTester',
      test_name='Should_fail_when_greater_than_input',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0001925
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.DefaultValidatorExtensionTester',
      test_name='GreaterThanOrEqual_should_create_GreaterThanOrEqualValidator_with_lam'
        'bda',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0078787
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ForEachRuleTests',
      test_name='Validates_child_validator_synchronously',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.000356
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.EnumValidatorTests',
      test_name='Nullable_enum_valid_when_value_specified',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0018848
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.SharedConditionTests',
      test_name='Doesnt_throw_NullReferenceException_when_instance_not_null',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0001771
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.LengthValidatorTests',
      test_name='Min_and_max_properties_should_be_set',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0001047
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.AbstractValidatorTester',
      test_name='WithMessage_and_WithErrorCode_should_override_error_message_and_error'
        '_code',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0001772
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ValidatorTesterTester',
      test_name='ShouldNotHaveValidationError_async',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0015238
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ForEachRuleTests',
      test_name='Nested_conditions_Rule_For',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0009052
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.CascadingFailuresTester',
      test_name='Cascade_mode_can_be_set_after_validator_instantiated_legacy',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0002101
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ValidatorTesterTester',
      test_name='ShouldNotHaveValidationError_should_throw_when_there_are_validation_e'
        'rrors__WhenAsyn_is_used(age: 42, cardNumber: "")',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0006807
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.PropertyChainTests',
      test_name='AddIndexer_throws_when_nothing_added',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.000171
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.CollectionValidatorWithParentTests',
      test_name='Collection_should_be_explicitly_included_with_string',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0005652
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.RulesetTests',
      test_name='Executes_rules_not_specified_in_ruleset',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0001365
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.RulesetTests',
      test_name='Ruleset_selection_should_cascade_downwards_with_when_setting_child_va'
        'lidator_using_include_statement',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0001585
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ValidatorTesterTester',
      test_name='ShouldHaveValidationError_model_async',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0013614
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ComplexValidationTester',
      test_name='Condition_should_work_with_complex_property_when_invoked_async',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0008233
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.SharedConditionTests',
      test_name='RuleSet_can_be_used_inside_condition',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.000827
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.NameResolutionPluggabilityTester',
      test_name='Uses_custom_property_name',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0002739
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.SharedConditionTests',
      test_name='Does_not_execute_customasync_Rule_when_condition_false',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0003491
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.CascadingFailuresTester',
      test_name='Validation_stops_on_first_Failure_when_set_to_Continue_globally_and_o'
        'verriden_at_rule_level_async_legacy',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0007979
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ValidatorTesterTester',
      test_name='Matches_model_level_rule',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0006479
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.CollectionValidatorWithParentTests',
      test_name='Should_work_with_top_level_collection_validator_and_overriden_name',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0003943
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.RegularExpressionValidatorTests',
      test_name='When_the_text_does_not_match_the_lambda_regex_regular_expression_then'
        '_the_validator_should_fail',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0003653
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ValidatorTesterTester',
      test_name='ShouldHaveChildValidator_throws_when_property_does_not_have_child_val'
        'idator',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0003445
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ForEachRuleTests',
      test_name='Collection_should_be_explicitly_included_with_string',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0005339
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ValidatorTesterTester',
      test_name='ShouldHaveValidationError_should_throw_when_there_are_not_validation_'
        'errors__WhenAsyn_Is_Used(age: 17, cardNumber: "")',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0017937
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.InclusiveBetweenValidatorTests',
      test_name='When_the_value_is_smaller_than_the_range_then_the_validator_should_fa'
        'il',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0002294
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.RuleDependencyTests',
      test_name='Treats_root_level_RuleFor_call_as_dependent_rule_if_user_forgets_to_u'
        'se_DependentRulesBuilder',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0003687
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.RegularExpressionValidatorTests',
      test_name='When_the_text_does_not_match_the_lambda_regular_expression_then_the_v'
        'alidator_should_fail',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0001392
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.EmailValidatorTests',
      test_name='Fails_email_validation_aspnetcore_compatible(email: '
        '"@someDomain.com")',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=2.48e-05
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.AccessorCacheTests',
      test_name='Benchmark',
      result='skipped',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.001
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.LessThanValidatorTester',
      test_name='Should_set_default_validation_message_when_validation_fails',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.000352
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.LocalisedMessagesTester',
      test_name='Uses_func_to_get_message',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0002383
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.GreaterThanOrEqualToValidatorTester',
      test_name='Validates_with_nullable_when_property_not_null_cross_property',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0002763
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.GreaterThanValidatorTester',
      test_name='Validates_nullable_with_nullable_property',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0006029
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.CollectionValidatorWithParentTests',
      test_name='Can_specify_condition_for_individual_collection_elements',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0009154
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ComplexValidationTester',
      test_name='Can_validate_using_validator_for_base_type',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0012612
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.DefaultValidatorExtensionTester',
      test_name='Length_should_create_MaximumLengthValidator',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0002942
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.RulesetTests',
      test_name='Trims_spaces',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0004086
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ValidatorDescriptorTester',
      test_name='Should_retrieve_name_given_to_it_pass_property_as_string',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0005729
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.SharedConditionTests',
      test_name='WhenAsync_condition_only_executed_once',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.00092
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ExactLengthValidatorTester',
      test_name='When_the_validator_fails_the_error_message_should_be_set',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0002836
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ExclusiveBetweenValidatorTests',
      test_name='When_the_value_is_between_the_range_specified_then_the_validator_shou'
        'ld_pass',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0011727
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.DefaultValidatorExtensionTester',
      test_name='Must_should_create_PredicteValidator',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0004938
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.RulesetTests',
      test_name='Applies_multiple_rulesets_to_rule',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0004398
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.EnumValidatorTests',
      test_name='Flags_enum_invalid_when_using_outofrange_negative_value',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.000756
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.PredicateValidatorTester',
      test_name='When_validation_fails_the_default_error_should_be_set',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0004204
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.EmailValidatorTests',
      test_name='Fails_email_validation_aspnetcore_compatible(email: "someName@")',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=2.27e-05
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.LengthValidatorTests',
      test_name='When_input_is_null_then_the_validator_should_pass',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.000352
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.CascadingFailuresTester',
      test_name='Cascade_mode_can_be_set_after_validator_instantiated_async',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0008338
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ModelLevelValidatorTests',
      test_name='Can_use_child_validator_at_model_level',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0004502
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ChainedValidationTester',
      test_name='Separate_validation_on_chained_property_conditional',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0002104
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ExclusiveBetweenValidatorTests',
      test_name='When_the_value_is_smaller_than_the_range_then_the_validator_should_fa'
        'il',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0002469
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.EnumValidatorTests',
      test_name='Flags_enum_invalid_when_using_outofrange_positive_value',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0007806
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ValidatorTesterTester',
      test_name='ShouldHaveValidationError_should_not_throw_when_there_are_errors_with'
        '_preconstructed_object',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0006462
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ScalePrecisionValidatorTests',
      test_name='Scale_precision_should_not_be_valid_when_they_are_equal',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0004406
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.AbstractValidatorTester',
      test_name='Validates_single_property_by_path',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0004851
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.RuleBuilderTests',
      test_name='Should_throw_when_async_inverse_predicate_is_null',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.000354
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.RuleBuilderTests',
      test_name='Should_throw_when_inverse_context_predicate_is_null',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0003354
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ValidatorTesterTester',
      test_name='ShouldHaveValidationError_should_not_throw_when_there_are_validation_'
        'errors_ruleforeach',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0008097
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.CascadingFailuresTester',
      test_name='Validation_continues_to_second_validator_when_first_validator_succeed'
        's_and_cascade_set_to_stop_async_legacy',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0011758
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.InheritanceValidatorTest',
      test_name='Validates_collection',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0006633
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.RuleBuilderTests',
      test_name='Should_throw_when_context_predicate_is_null',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0001421
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.EqualValidatorTests',
      test_name='When_validation_fails_the_error_should_be_set',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.00023
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.LessThanValidatorTester',
      test_name='Should_throw_when_value_to_compare_is_null',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0002891
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.LengthValidatorTests',
      test_name='When_the_text_is_between_the_lambda_range_specified_then_the_validato'
        'r_should_pass',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.00092
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.NotNullTester',
      test_name='Fails_when_nullable_value_type_is_null',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0003908
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ValidateAndThrowTester',
      test_name='Does_not_throw_when_valid_async',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.001014
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.StringEnumValidatorTests',
      test_name='When_the_property_is_initialized_with_null_then_the_validator_should_'
        'be_valid',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=8.7e-05
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ValidatorTesterTester',
      test_name='ShouldHaveValidationError_should_not_throw_when_there_are_validation_'
        'errors__WhenAsyn_is_used(age: 42, cardNumber: "")',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0006089
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.LanguageManagerTests',
      test_name='Gets_translation_for_serbian_culture(cultureName: "sr-Latn")',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=4.84e-05
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ExclusiveBetweenValidatorTests',
      test_name='When_the_value_is_smaller_than_the_range_then_the_validator_should_fa'
        'il_for_strings',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0002367
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.PropertyChainTests',
      test_name='Should_be_subchain',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0001203
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.NotEqualValidatorTests',
      test_name='When_the_objects_are_equal_then_the_validator_should_fail',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0002655
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.EqualValidatorTests',
      test_name='When_the_objects_are_not_equal_validation_should_fail',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0002192
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.EmptyTester',
      test_name='Passes_for_ienumerable_that_doesnt_implement_ICollection',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0030376
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.StringEnumValidatorTests',
      test_name='When_enumType_is_not_an_enum_it_should_throw',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0004576
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.EnumValidatorTests',
      test_name='When_validation_fails_the_default_error_should_be_set',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0001061
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ConditionTests',
      test_name='Async_condition_executed_synchronosuly_with_synchronous_role',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0003076
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ValidatorTesterTester',
      test_name='Tests_nested_property',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0004914
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ForEachRuleTests',
      test_name='Validates_child_validator_asynchronously',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0007232
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ChainedValidationTester',
      test_name='Separate_validation_on_chained_property',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.001368
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.RuleDependencyTests',
      test_name='TestAsyncWithDependentRules_SyncEntry',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0013846
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ConditionTests',
      test_name='Async_condition_is_applied_to_all_validators_in_the_chain',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0008144
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ValidatorTesterTester',
      test_name='Unexpected_message_check(withoutErrMsg: "bar", errMessages: ["bar"])',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0001548
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ValidatorTesterTester',
      test_name='ShouldNotHaveValidationError_model_async',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0012782
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ValidatorTesterTester',
      test_name='Expected_message_argument_check',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0009659
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ValidatorDescriptorTester',
      test_name='Does_not_throw_when_rule_declared_without_property',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0001726
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ConditionTests',
      test_name='Async_condition_executed_synchronosuly_with_asynchronous_rule',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0002385
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.CascadingFailuresTester',
      test_name='Validation_continues_on_failure_when_set_to_StopOnFirstFailure_at_val'
        'idator_level_and_overriden_at_rule_level_async_legacy',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0010468
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.CollectionValidatorWithParentTests',
      test_name='Validates_collection_several_levels_deep',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0011437
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ExclusiveBetweenValidatorTests',
      test_name='Validates_with_nullable_when_property_is_null',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0002242
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.EmptyTester',
      test_name='When_value_is_whitespace_validation_should_pass',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0001968
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.LanguageManagerTests',
      test_name='Disables_localization',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0001637
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.CustomMessageFormatTester',
      test_name='Uses_property_value_in_message',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0008185
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.LessThanOrEqualToValidatorTester',
      test_name='Comparison_type',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0001094
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.SharedConditionTests',
      test_name='When_condition_only_executed_once',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0004167
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.PropertyChainTests',
      test_name='Should_not_be_subchain',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=5.03e-05
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.SharedConditionTests',
      test_name='Shared_When_is_applied_to_groupd_rules_when_initial_predicate_is_true'
        '_and_all_individual_rules_are_satisfied',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.000455
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ForEachRuleTests',
      test_name='Can_access_colletion_index',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0002866
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ValidatorTesterTester',
      test_name='ShouldHaveValidationError_should_throw_when_there_are_not_validation_'
        'errors__WhenAsyn_Is_Used(age: 17, cardNumber: null)',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0005484
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.SharedConditionTests',
      test_name='Rules_not_invoked_when_inverse_shared_async_condition_does_not_match',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0028571
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ValidatorTesterTester',
      test_name='ShouldNotHaveValidationError_should_throw_when_there_are_not_validati'
        'on_errors__WhenAsyn_is_used(age: 17, cardNumber: "")',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0005719
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.RuleBuilderTests',
      test_name='Should_throw_when_predicate_is_null',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0001542
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ForEachRuleTests',
      test_name='Nested_conditions_Rule_For_Each',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0009411
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.NotEqualValidatorTests',
      test_name='Should_not_be_valid_for_case_insensitve_comparison_with_expression',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0002824
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ForEachRuleTests',
      test_name='Correctly_gets_collection_indices',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0003199
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.AbstractValidatorTester',
      test_name='Should_validate_single_property_where_invalid_property_as_string',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.000216
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.EnumValidatorTests',
      test_name='Nullable_enum_valid_when_property_value_is_null',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0001594
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ValidationResultTests',
      test_name='Should_not_be_valid_when_there_are_errors',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=5.49e-05
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.UserSeverityTester',
      test_name='Correctly_provides_object_being_validated',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0003232
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ValidatorTesterTester',
      test_name='Unexpected_error_code_check',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0016124
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ComplexValidationTester',
      test_name='Complex_property_should_be_excluded',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0003153
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ChainingValidatorsTester',
      test_name='Should_execute_multiple_validators',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0001781
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ValidatorTesterTester',
      test_name='ShouldNotHaveValidationError_should_throw_when_there_are_errors',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0008858
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.GreaterThanOrEqualToValidatorTester',
      test_name='Should_succeed_when_greater_than_input',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=8e-05
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ValidatorTesterTester',
      test_name='ShouldHaveValidationError_should_throw_when_there_are_not_validation_'
        'errors__WhenAsyn_Is_Used(age: 42, cardNumber: "cardNumber")',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0008127
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.RuleDependencyTests',
      test_name='TestAsyncWithDependentRules_AsyncEntry',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0050739
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.LanguageManagerTests',
      test_name='All_localizations_have_same_parameters_as_English',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.021761
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ForEachRuleTests',
      test_name='Async_condition_should_work_with_child_collection',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0007127
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.PropertyChainTests',
      test_name='Calling_ToString_should_construct_string_representation_of_chain',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=7.48e-05
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.LanguageManagerTests',
      test_name='Falls_back_to_english_when_translation_missing',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.000523
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.NotNullTester',
      test_name='NotNullValidator_should_pass_if_value_has_value',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0002119
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ValidatorTesterTester',
      test_name='Unexpected_message_check(withoutErrMsg: "bar", errMessages: ["foo"])',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0003297
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.LanguageManagerTests',
      test_name='Gets_translation_for_croatian_culture',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0004599
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ValidatorTesterTester',
      test_name='ShouldHaveChildValidator_should_work_with_DependentRules',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0012294
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.NameResolutionPluggabilityTester',
      test_name='Resolves_nested_properties',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0005703
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.AbstractValidatorTester',
      test_name='WhenPreValidationReturnsTrue_ValidatorsGetHit_Validate',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0004371
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.InclusiveBetweenValidatorTests',
      test_name='To_and_from_properties_should_be_set',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.000131
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ChainedValidationTester',
      test_name='Uses_explicit_ruleset',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0005128
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ValidationResultTests',
      test_name='ToString_return_error_messages_with_given_separator',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=7.27e-05
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.CollectionValidatorWithParentTests',
      test_name='Can_validate_collection_using_validator_for_base_type',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0010737
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.LessThanOrEqualToValidatorTester',
      test_name='Validates_with_nullable_when_property_is_null',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0003672
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ValidatorTesterTester',
      test_name='ShouldNotHaveValidationError_should_throw_when_there_are_not_validati'
        'on_errors__WhenAsyn_is_used(age: 42, cardNumber: "cardNumber")',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.000897
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ValidatorTesterTester',
      test_name='ShouldHaveValidationError_async',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0027288
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.InclusiveBetweenValidatorTests',
      test_name='When_the_value_is_exactly_the_size_of_the_lower_bound_then_the_valida'
        'tor_should_pass_for_strings',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0003005
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.EmailValidatorTests',
      test_name='Fails_email_validation_aspnetcore_compatible(email: "0")',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0002222
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ConditionTests',
      test_name='Validation_should_fail_when_async_condition_does_not_match',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0004177
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ScalePrecisionValidatorTests',
      test_name='Scale_precision_should_not_be_valid',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0006978
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.EnumValidatorTests',
      test_name='Nullable_enum_invalid_when_bad_value_specified',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0003847
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.DefaultValidatorExtensionTester',
      test_name='LessThan_should_create_LessThanValidator_with_explicit_value',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0002742
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.CustomValidatorTester',
      test_name='New_Custom_Returns_single_failure',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.000335
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ForEachRuleTests',
      test_name='Top_level_collection',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0003379
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ValidatorTesterTester',
      test_name='ShouldHaveValidationError_should_not_throw_when_there_are_validation_'
        'errors',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0007782
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.EnumValidatorTests',
      test_name='IsValidTests',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0001215
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.NotEmptyTester',
      test_name='When_value_is_Default_for_type_validator_should_fail_datetime',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0019899
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.EmailValidatorTests',
      test_name='Valid_email_addresses_regex(email: "!def!xyz%abc@example.com")',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=2.2e-05
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ForEachRuleTests',
      test_name='Validates_collection',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0005174
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.MemberAccessorTests',
      test_name='ImplicitCast',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0008766
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.NotEmptyTester',
      test_name='When_value_is_Default_for_type_validator_should_fail_int',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0018552
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.LocalisedMessagesTester',
      test_name='Formats_string_with_placeholders',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0002342
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ComplexValidationTester',
      test_name='Multiple_rules_in_chain_with_childvalidator_shouldnt_reuse_accessor',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0007222
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.SharedConditionTests',
      test_name='Doesnt_throw_NullReferenceException_when_instance_not_null_async',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0014608
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.MemberAccessorTests',
      test_name='SimpleFieldGet',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0004109
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.CustomMessageFormatTester',
      test_name='Replaces_propertyvalue_with_empty_string_when_null',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0002456
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.LocalisedNameTester',
      test_name='Uses_localized_name_expression',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0008903
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.RegularExpressionValidatorTests',
      test_name='When_the_text_does_not_match_the_regular_expression_then_the_validato'
        'r_should_fail',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0001644
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.CustomFailureActionTester',
      test_name='Does_not_invoke_action_if_validation_success',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0002528
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.LessThanValidatorTester',
      test_name='Should_succeed_when_less_than_input',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0001783
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.AbstractValidatorTester',
      test_name='CanValidateInstancesOfType_returns_true_when_comparing_against_same_t'
        'ype',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=6.65e-05
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.CascadingFailuresTester',
      test_name='Validation_stops_on_first_failure_when_set_to_StopOnFirstFailure_at_v'
        'alidator_level_async',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.000909
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.SharedConditionTests',
      test_name='Executes_custom_rule_when_async_condition_true',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0007245
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ForEachRuleTests',
      test_name='Should_not_scramble_property_name_when_using_collection_validators_se'
        'veral_levels_deep_with_ValidateAsync',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0021348
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.MessageFormatterTests',
      test_name='Adds_formatted_argument_and_formatted_custom_arguments',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0002678
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.EmailValidatorTests',
      test_name='Valid_email_addresses_regex(email: "\\"Abc\\\\@def\\"@example.com")',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=2.6e-05
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.PredicateValidatorTester',
      test_name='When_validation_fails_metadata_should_be_set_on_failure',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0012067
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.PropertyChainTests',
      test_name='Calling_ToString_should_construct_string_representation_of_chain_with'
        '_indexers',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0002382
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ValidateAndThrowTester',
      test_name='Does_not_throw_when_valid_and_a_ruleset',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0003775
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.LessThanValidatorTester',
      test_name='Comparison_property_uses_custom_resolver',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0003967
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.AbstractValidatorTester',
      test_name='Can_replace_default_errorcode_resolver',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0003158
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.RuleBuilderTests',
      test_name='Calling_validate_should_delegate_to_underlying_validator',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0014739
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.NullTester',
      test_name='NullValidator_should_pass_if_value_is_null',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0003543
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.UserStateTester',
      test_name='Correctly_provides_object_being_validated',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0003223
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.LengthValidatorTests',
      test_name='When_the_text_is_larger_than_the_range_then_the_validator_should_fail',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0002796
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.EnumValidatorTests',
      test_name='When_the_enum_is_initialized_with_invalid_value_then_the_validator_sh'
        'ould_fail',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0002553
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ValidatorTesterTester',
      test_name='Tests_nested_property_using_obsolete_method',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0004676
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.RegularExpressionValidatorTests',
      test_name='Can_access_expression_in_message',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0002264
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ValidationResultTests',
      test_name='Can_serialize_result',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0071021
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.CascadingFailuresTester',
      test_name='Validation_continues_on_failure_when_set_to_StopOnFirstFailure_at_val'
        'idator_level_and_overriden_at_rule_level_async',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.001072
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.SharedConditionTests',
      test_name='Async_condition_can_be_used_inside_ruleset',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0018948
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.GreaterThanValidatorTester',
      test_name='Comparison_Type',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0002061
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ComplexValidationTester',
      test_name='Validates_child_validator_synchronously',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0004716
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.CreditCardValidatorTests',
      test_name='IsValidTests',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0002171
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.CascadingFailuresTester',
      test_name='Validation_continues_to_second_validator_when_first_validator_succeed'
        's_and_cascade_set_to_stop',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0001667
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.StringEnumValidatorTests',
      test_name='When_enumType_is_null_it_should_throw',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0021549
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.LessThanOrEqualToValidatorTester',
      test_name='Validates_nullable_with_nullable_property',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0004362
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.CustomMessageFormatTester',
      test_name='Replaces_propertyvalue_placeholder',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0009778
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ValidatorTesterTester',
      test_name='ShouldHaveValidationError_should_throw_when_there_are_not_validation_'
        'errors_ruleforeach',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0022202
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.NotEqualValidatorTests',
      test_name='Should_store_property_to_compare',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.001834
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.GreaterThanValidatorTester',
      test_name='Validates_with_property',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0004626
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.GreaterThanOrEqualToValidatorTester',
      test_name='Validates_with_nullable_property',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0005735
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.CustomValidatorTester',
      test_name='Runs_sync_rule_asynchronously_when_validator_invoked_asynchronously',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0005199
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.RuleDependencyTests',
      test_name='Does_not_invoke_dependent_rule_if_parent_rule_does_not_pass',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.000328
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.RulesetTests',
      test_name='Executes_rules_in_specified_ruleset',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0001594
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ComplexValidationTester',
      test_name='Async_condition_should_work_with_complex_property_when_validator_invo'
        'ked_synchronously',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0007052
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.EmailValidatorTests',
      test_name='Valid_email_addresses_aspnetcore_compatible(email: '
        '"someName@someDomain.com")',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=1.67e-05
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.AbstractValidatorTester',
      test_name='WithErrorCode_should_override_error_code',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0001849
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.OnFailureTests',
      test_name='WhenAsyncWithOnFailure_should_invoke_condition_on_async_inner_validat'
        'or',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0006154
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.CascadingFailuresTester',
      test_name='Validation_stops_on_failure_when_set_to_Continue_and_overriden_at_rul'
        'e_level_async',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0008319
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ChainedValidationTester',
      test_name='Should_allow_normal_rules_and_chained_property_on_same_property',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0002278
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.SharedConditionTests',
      test_name='Shared_When_respects_the_smaller_scope_of_a_inner_Unless_when_the_inn'
        'er_Unless_predicate_fails',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0001544
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.DefaultValidatorExtensionTester',
      test_name='LessThanOrEqual_should_create_LessThanOrEqualValidator_with_lambda_wi'
        'th_other_Nullable',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0004351
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.LessThanValidatorTester',
      test_name='Validates_with_nullable_when_property_null_cross_property',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0004635
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.NotEqualValidatorTests',
      test_name='When_the_objects_are_not_equal_then_the_validator_should_pass',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0002334
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.RuleDependencyTests',
      test_name='Nested_dependent_rules_inside_ruleset_no_result_when_top_level_fails',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0016869
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ValidationResultTests',
      test_name='Should_be_valid_when_there_are_no_errors',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=3.35e-05
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.AbstractValidatorTester',
      test_name='Default_error_code_should_be_class_name',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0001555
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.LengthValidatorTests',
      test_name='When_the_text_is_exactly_the_size_of_the_lambda_upper_bound_then_the_'
        'validator_should_pass',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0003149
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.StandalonePropertyValidationTester',
      test_name='Should_validate_property_value_without_instance',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0003758
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ValidatorSelectorTests',
      test_name='Includes_nested_property_using_expression',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0005054
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.EmailValidatorTests',
      test_name='Valid_email_addresses_regex(email: null)',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0004724
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.DefaultValidatorExtensionTester',
      test_name='MustAsync_should_create_AsyncPredicteValidator',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0005833
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.DefaultValidatorExtensionTester',
      test_name='Length_should_create_ExactLengthValidator',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0003392
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.RegularExpressionValidatorTests',
      test_name='Can_access_expression_in_message_lambda_regex',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0002767
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.GreaterThanValidatorTester',
      test_name='Should_set_default_error_when_validation_fails',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0001047
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ExclusiveBetweenValidatorTests',
      test_name='When_the_value_is_exactly_the_size_of_the_upper_bound_then_the_valida'
        'tor_should_fail_for_strings',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.000234
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.SharedConditionTests',
      test_name='Shared_When_respects_the_smaller_scope_of_an_inner_Unless_when_the_in'
        'ner_Unless_predicate_is_satisfied',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0019156
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ValidationResultTests',
      test_name='ToString_return_empty_string_when_there_is_no_error',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0001348
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ValidatorTesterTester',
      test_name='Allows_only_one_failure_to_match',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0007083
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.SharedConditionTests',
      test_name='Executes_custom_rule_when_condition_true',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0010053
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ValidatorTesterTester',
      test_name='ShouldNotHaveValidationError_should_throw_when_there_are_validation_e'
        'rrors__WhenAsyn_is_used(age: 42, cardNumber: null)',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0008635
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.LanguageManagerTests',
      test_name='Gets_translation_for_bosnian_latin_culture(cultureName: "bs-Latn-BA")',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=1.1e-05
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.InclusiveBetweenValidatorTests',
      test_name='When_the_value_is_smaller_than_the_range_then_the_validator_should_fa'
        'il_for_strings',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0002161
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ChainedValidationTester',
      test_name='Validates_chained_property',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0010483
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.SharedConditionTests',
      test_name='Runs_otherwise_conditions_for_WhenAsync',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.001126
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.SharedConditionTests',
      test_name='When_async_condition_executed_for_each_instance_of_RuleForEach_condit'
        'ion_should_not_be_cached',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0012985
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.DefaultValidatorExtensionTester',
      test_name='Length_should_create_MinimumLengthValidator',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0002645
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.RulesetTests',
      test_name='Executes_in_rule_in_ruleset_and_default',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0003802
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.LessThanOrEqualToValidatorTester',
      test_name='Should_set_default_error_when_validation_fails',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0001044
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.InheritanceValidatorTest',
      test_name='Can_use_custom_subclass_with_nongeneric_overload',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0006978
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ValidateAndThrowTester',
      test_name='Serializes_exception',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.007024
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.SharedConditionTests',
      test_name='Nested_async_conditions_with_Custom_rule',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0007695
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.AbstractValidatorTester',
      test_name='PreValidate_bypasses_nullcheck_on_instance',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0002142
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.DefaultValidatorExtensionTester',
      test_name='GreaterThan_should_create_GreaterThanValidator_with_explicit_value',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0002587
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.EmailValidatorTests',
      test_name='Invalid_email_addressex_regex(email: '
        '"thisisaverylongstringcodeplex.com")',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=3.16e-05
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.AbstractValidatorTester',
      test_name='WithMessage_should_override_error_message',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.000159
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ValidatorTesterTester',
      test_name='Expected_error_code_check',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0005874
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.MessageFormatterTests',
      test_name='Understands_numeric_formats',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0001847
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.CollectionValidatorWithParentTests',
      test_name='Should_override_property_name',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0004755
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.MessageFormatterTests',
      test_name='Adds_formatted_argument_and_custom_arguments',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=8.08e-05
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.SharedConditionTests',
      test_name='Nested_conditions_with_Custom_rule',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0004756
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.CustomValidatorTester',
      test_name='New_Custom_When_property_name_omitted_infers_property_name_nested',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0006318
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ValidatorSelectorTests',
      test_name='Validates_property_using_expression',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0013178
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ValidatorTesterTester',
      test_name='ShouldNotHaveValidationError_should_throw_when_there_are_not_validati'
        'on_errors__WhenAsyn_is_used(age: 17, cardNumber: "cardNumber")',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0005838
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.LessThanValidatorTester',
      test_name='Extracts_property_from_expression',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0005257
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.CollectionValidatorWithParentTests',
      test_name='Validates_collection_several_levels_deep_async',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0010832
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.CascadingFailuresTester',
      test_name='Validation_stops_on_first_Failure_when_set_to_Continue_globally_and_o'
        'verriden_at_rule_level_and_async_validator_is_invoked_synchronously_l'
        'egacy',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0005077
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.NotEqualValidatorTests',
      test_name='Should_use_ordinal_comparison_by_default',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0002273
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.AssemblyScannerTester',
      test_name='Finds_validators_for_types',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0002381
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.LanguageManagerTests',
      test_name='Falls_back_to_parent_culture',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0004487
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.OnFailureTests',
      test_name='ShouldHaveChildValidator_should_be_true',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0012439
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.OnFailureTests',
      test_name='WhenAsyncWithOnFailure_should_invoke_condition_on_inner_validator_inv'
        'oked_synchronously',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0003084
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.CascadingFailuresTester',
      test_name='Validation_stops_on_first_failure_legacy',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0001809
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.StringEnumValidatorTests',
      test_name='When_the_property_is_initialized_with_empty_string_then_the_validator'
        '_should_fail',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0001593
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.AssemblyScannerTester',
      test_name='ForEach_iterates_over_types',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0018574
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.LanguageManagerTests',
      test_name='Gets_translation_for_serbian_culture(cultureName: "sr-Latn-RS")',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=1e-05
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.RuleBuilderTests',
      test_name='Nullable_object_with_condition_should_not_throw',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.001088
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.LengthValidatorTests',
      test_name='When_the_text_is_smaller_than_the_range_then_the_validator_should_fai'
        'l',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0004057
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.AccessorCacheTests',
      test_name='Equality_comparison_check',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0021363
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.EmailValidatorTests',
      test_name='Valid_email_addresses_regex(email: "\\"Joe\\\\Blow\\"@example.com")',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=2.44e-05
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.RuleBuilderTests',
      test_name='Property_should_return_null_when_it_is_not_a_property_being_validated',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0003637
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ValidatorTesterTester',
      test_name='Expected_severity_check',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0046721
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ForEachRuleTests',
      test_name='Can_access_parent_index',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0016135
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.RuleBuilderTests',
      test_name='Should_throw_if_overriding_validator_is_null',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0001488
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.LengthValidatorTests',
      test_name='When_the_text_is_between_the_range_specified_then_the_validator_shoul'
        'd_pass',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0002179
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.LessThanOrEqualToValidatorTester',
      test_name='Should_succeed_when_less_than_input',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=8.2e-05
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ConditionTests',
      test_name='Validation_should_succeed_when_async_condition_matches',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0015482
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.CustomMessageFormatTester',
      test_name='Should_format_custom_message',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0002244
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ComplexValidationTester',
      test_name='Should_allow_normal_rules_and_complex_property_on_same_property',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0007508
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ValidatorTesterTester',
      test_name='ShouldNotHaveValidationError_should_throw_when_there_are_not_validati'
        'on_errors__WhenAsyn_is_used(age: 17, cardNumber: null)',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0005804
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ForEachRuleTests',
      test_name='Collection_should_be_excluded',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.000544
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.DefaultValidatorExtensionTester',
      test_name='LessThanOrEqual_should_create_LessThanOrEqualValidator_with_explicit_'
        'value',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0006133
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.RulesetTests',
      test_name='Executes_rules_in_default_ruleset_and_specific_ruleset',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0004761
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.RulesetTests',
      test_name='Includes_all_rulesets',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0008384
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ComplexValidationTester',
      test_name='Complex_validator_should_not_be_invoked_on_null_property',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0001677
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ValidatorTesterTester',
      test_name='ShouldNotHaveValidationError_should_not_throw_when_there_are_not_vali'
        'dation_errors_ruleforeach',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0008012
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ChainedValidationTester',
      test_name='Condition_should_work_with_chained_property',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0002054
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ConditionTests',
      test_name='Async_condition_executed_synchronosuly_with_synchronous_collection_ro'
        'le',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0003216
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ValidatorTesterTester',
      test_name='ShouldHaveChildValidator_works_on_model_level_rules',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0013494
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.AbstractValidatorTester',
      test_name='CanValidateInstancesOfType_returns_false_when_comparing_against_some_'
        'other_type',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=5.13e-05
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ExclusiveBetweenValidatorTests',
      test_name='To_and_from_properties_should_be_set_for_strings',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=6.7e-05
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.CollectionValidatorWithParentTests',
      test_name='Collection_should_be_excluded',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.000525
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.RulesetTests',
      test_name='Ruleset_cascades_to_child_collection_validator',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0008193
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ForEachRuleTests',
      test_name='Skips_null_items',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0004786
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.GreaterThanOrEqualToValidatorTester',
      test_name='Validates_with_nullable_when_property_is_null_cross_property',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.000466
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.TransformTests',
      test_name='Transforms_collection_element_async',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0012982
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.AbstractValidatorTester',
      test_name='WhenPreValidationReturnsFalse_ResultReturnToUserImmediatly_Validate(p'
        'reValidationResult: )',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0009423
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.InclusiveBetweenValidatorTests',
      test_name='When_the_to_is_smaller_than_the_from_then_the_validator_should_throw',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0006236
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.CascadingFailuresTester',
      test_name='Cascade_mode_can_be_set_after_validator_instantiated_async_legacy',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0013079
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.AbstractValidatorTester',
      test_name='CanValidateInstancesOfType_returns_true_when_comparing_against_subcla'
        'ss',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=5.66e-05
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.LengthValidatorTests',
      test_name='When_the_maxlength_validator_fails_the_error_message_should_be_set',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.000356
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ValidatorTesterTester',
      test_name='ShouldHaveValidationError_with_an_unmatched_rule_and_multiple_errors_'
        'should_throw_an_exception',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0017809
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.CascadingFailuresTester',
      test_name='Validation_continues_when_set_to_Continue_at_validator_level_async',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0010564
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ValidatorTesterTester',
      test_name='Unexpected_state_check',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0009751
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.EmailValidatorTests',
      test_name='Valid_email_addresses_aspnetcore_compatible(email: '
        '"!#$%&\'*+-/=?^_`|~@someDomain.com")',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=1.74e-05
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.InclusiveBetweenValidatorTests',
      test_name='Validates_with_nullable_when_property_not_null',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0004472
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ConditionTests',
      test_name='Validation_should_succeed_when_condition_matches',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0004142
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.RulesetTests',
      test_name='WithMessage_works_inside_rulesets',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0001237
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.DefaultValidatorExtensionTester',
      test_name='NotNull_should_create_NotNullValidator',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0002713
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.DefaultValidatorExtensionTester',
      test_name='MustAsync_should_create_AsyncPredicateValidator_with_PropertyValidato'
        'rContext',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0016185
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.AbstractValidatorTester',
      test_name='WithName_should_override_field_name',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0002032
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.CascadingFailuresTester',
      test_name='Validation_continues_on_failure_when_set_to_Stop_globally_and_overrid'
        'en_at_rule_level',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.000223
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ChainingValidatorsTester',
      test_name='Options_should_only_apply_to_current_validator',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0002348
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.EmailValidatorTests',
      test_name='Valid_email_addresses_aspnetcore_compatible(email: '
        '"someName@some~domain.com")',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=1.66e-05
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.NotNullTester',
      test_name='Not_null_validator_should_not_crash_with_non_nullable_value_type',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0002735
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.SharedConditionTests',
      test_name='Shared_When_is_not_applied_to_grouped_rules_when_initial_predicate_is'
        '_false',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0001183
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.RuleBuilderTests',
      test_name='Should_throw_if_property_name_is_null',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0002522
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.GreaterThanValidatorTester',
      test_name='Validates_with_nullable_property',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0005936
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ValidateAndThrowTester',
      test_name='ToString_provides_error_details',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0117391
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.RulesetTests',
      test_name='Ruleset_selection_should_cascade_downwards_with_when_setting_child_va'
        'lidator_using_include_statement_with_lambda',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.000822
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.AbstractValidatorTester',
      test_name='Uses_named_parameters_to_validate_ruleset',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0003616
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.NotEmptyTester',
      test_name='When_validation_fails_error_should_be_set',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0002777
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ConditionTests',
      test_name='Sync_condition_is_applied_to_async_validators',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0006349
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.EmailValidatorTests',
      test_name='Valid_email_addresses_aspnetcore_compatible(email: '
        '"someName@someDomain\uffef.com")',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=1.57e-05
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.EqualValidatorTests',
      test_name='Should_store_property_to_compare',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0003283
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.LanguageManagerTests',
      test_name='Gets_translation_for_bosnian_latin_culture(cultureName: "bs-Latn")',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=6.27e-05
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ValidatorTesterTester',
      test_name='TestValidate_runs_async_throws',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.000854
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.OnFailureTests',
      test_name='WhenWithOnFailure_should_invoke_condition_on_inner_validator',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0002855
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.SharedConditionTests',
      test_name='Nested_conditions_with_CustomAsync_rule',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0027533
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ChainedValidationTester',
      test_name='Can_validate_using_validator_for_base_type',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0014496
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.NotEmptyTester',
      test_name='When_value_is_empty_string_validator_should_fail',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0002511
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.EmailValidatorTests',
      test_name='Valid_email_addresses_aspnetcore_compatible(email: '
        '"\\"firstName.lastName\\"@someDomain.com")',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=1.67e-05
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ValidatorTesterTester',
      test_name='Expected_state_check',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0008908
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.LengthValidatorTests',
      test_name='When_the_text_is_exactly_the_size_of_the_upper_bound_then_the_validat'
        'or_should_pass',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.000329
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ValidateAndThrowTester',
      test_name='Does_not_throw_when_valid',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0002097
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ForEachRuleTests',
      test_name='Overrides_indexer_async',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0011101
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ValidatorTesterTester',
      test_name='ShouldHaveChildValidator_should_not_throw_when_property_has_collectio'
        'n_validators',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0005756
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ScalePrecisionValidatorTests',
      test_name='Scale_precision_should_be_valid_when_ignoring_trailing_zeroes',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0015273
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.LanguageManagerTests',
      test_name='All_languages_should_be_loaded',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0013878
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.AbstractValidatorTester',
      test_name='When_the_validators_fail_then_validatorrunner_should_return_false',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0001522
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.RuleBuilderTests',
      test_name='Should_throw_when_async_predicate_is_null',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0001555
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.NotEmptyTester',
      test_name='When_there_is_a_value_then_the_validator_should_pass',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0002293
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.InclusiveBetweenValidatorTests',
      test_name='To_and_from_properties_should_be_set_for_strings',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=6.02e-05
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.LessThanValidatorTester',
      test_name='Should_fail_when_equal_to_input',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0002
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ValidationResultTests',
      test_name='Can_serialize_failure',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=9.95e-05
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ValidatorTesterTester',
      test_name='Unexpected_severity_check',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0009091
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.CascadingFailuresTester',
      test_name='Validation_continues_on_failure_when_set_to_StopOnFirstFailure_at_val'
        'idator_level_and_overriden_at_rule_level_legacy',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0002332
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.RegularExpressionValidatorTests',
      test_name='When_the_text_is_empty_then_the_validator_should_fail',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0001049
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.TransformTests',
      test_name='Transforms_property_value_to_another_type',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0004268
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.LessThanOrEqualToValidatorTester',
      test_name='Validates_with_nullable_when_property_not_null',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0002607
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.DefaultValidatorExtensionTester',
      test_name='LessThan_should_create_LessThanValidator_with_lambda',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0005323
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ValidatorSelectorTests',
      test_name='Can_use_property_with_include',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0009319
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.SharedConditionTests',
      test_name='Outer_async_Unless_clause_will_trump_an_inner_Unless_clause_when_inne'
        'r_fails_but_the_outer_is_satisfied',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0004874
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.EmailValidatorTests',
      test_name='Valid_email_addresses_regex(email: "__somename@example.com")',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=2.19e-05
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.NullTester',
      test_name='When_the_validator_passes_the_error_message_should_be_set',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0002424
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.EmailValidatorTests',
      test_name='Invalid_email_addressex_regex(email: "first.last@test..co.uk")',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=3.34e-05
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.SharedConditionTests',
      test_name='Shared_async_When_respects_the_smaller_scope_of_an_inner_Unless_when_'
        'the_inner_Unless_predicate_is_satisfied',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0004845
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.TrackingCollectionTests',
      test_name='Add_AddsItem',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0006937
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ValidatorSelectorTests',
      test_name='Executes_correct_rule_when_using_property_with_include',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.001118
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.AccessorCacheTests',
      test_name='Gets_member_for_nested_property',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0001084
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ComplexValidationTester',
      test_name='Async_condition_should_work_with_complex_property',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0023119
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.PropertyChainTests',
      test_name='Should_ignore_blanks',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=4.72e-05
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ValidatorTesterTester',
      test_name='ShouldNotHaveValidationError_should_correctly_handle_explicitly_provi'
        'ding_object_to_validate_and_other_property_fails_validation',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0014272
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.OnFailureTests',
      test_name='OnFailure_called_for_each_failed_rule_asyncAsync',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0018854
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.EmailValidatorTests',
      test_name='Valid_email_addresses_regex(email: "\\"Abc@def\\"@example.com")',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=2.45e-05
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ForEachRuleTests',
      test_name='Can_access_parent_index_async',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0011019
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.OnFailureTests',
      test_name='Should_be_able_to_access_error_message_in_OnFailure',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0005239
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.LanguageManagerTests',
      test_name='Always_use_specific_language_with_string_source',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0003219
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.LessThanValidatorTester',
      test_name='Validates_with_nullable_property',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0005793
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ForEachRuleTests',
      test_name='Overrides_indexer',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0012315
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ValidatorTesterTester',
      test_name='ShouldHaveValidationError_Should_support_nested_properties',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0008523
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.TrackingCollectionTests',
      test_name='When_Item_Added_Raises_ItemAdded',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0008476
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.RuleBuilderTests',
      test_name='Should_compile_expression',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0001225
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.UserStateTester',
      test_name='Can_Provide_state_for_item_in_collection',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.001113
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.EmailValidatorTests',
      test_name='Valid_email_addresses_regex(email: "testperson@gmail.com")',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0163384
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.CustomFailureActionTester',
      test_name='Invokes_custom_action_on_failure',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0002284
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ConditionTests',
      test_name='Condition_is_applied_to_single_validator_in_the_chain_when_ApplyCondi'
        'tionTo_set_to_CurrentValidator',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0003365
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ComplexValidationTester',
      test_name='Explicitly_included_properties_should_be_propagated_to_nested_validat'
        'ors',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0023437
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.EqualValidatorTests',
      test_name='Should_store_comparison_type',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0003359
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.StringEnumValidatorTests',
      test_name='IsValidTests_CaseInsensitive_CaseCorrect',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0001096
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ExactLengthValidatorTester',
      test_name='When_the_text_length_is_smaller_the_validator_should_fail',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0004689
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.NotEmptyTester',
      test_name='Fails_for_ienumerable_that_doesnt_implement_ICollection',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0012461
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.NotEqualValidatorTests',
      test_name='Should_not_be_valid_for_case_insensitve_comparison',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0004358
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.InheritanceValidatorTest',
      test_name='Validates_with_callback_accepting_derived',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0006007
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.RuleBuilderTests',
      test_name='Nullable_object_with_async_condition_should_not_throw',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0005033
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.NotEqualValidatorTests',
      test_name='Comparison_property_uses_custom_resolver',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0004998
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ValidatorTesterTester',
      test_name='ShouldNotHaveValidationError_should_have_validation_error_details_whe'
        'n_thrown_ruleforeach',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0012661
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.NotEqualValidatorTests',
      test_name='Validates_across_properties',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0003172
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.NameResolutionPluggabilityTester',
      test_name='ShouldHaveValidationError_Should_support_custom_propertynameresolver',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0007316
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.SharedConditionTests',
      test_name='Outer_Unless_clause_will_trump_an_inner_Unless_clause_when_inner_fail'
        's_but_the_outer_is_satisfied',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0001804
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.InlineValidatorTester',
      test_name='Uses_inline_validator_to_build_rules',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.001679
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.LessThanOrEqualToValidatorTester',
      test_name='Validates_with_nullable_when_property_is_null_cross_property',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0004822
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.UserSeverityTester',
      test_name='Should_use_last_supplied_severity',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0006834
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ValidatorTesterTester',
      test_name='Can_use_indexer_in_string_message',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.000562
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.SharedConditionTests',
      test_name='Runs_otherwise_conditions_for_UnlessAsync',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0041051
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ValidationResultTests',
      test_name='Should_add_errors',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=9.17e-05
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ValidatorTesterTester',
      test_name='ShouldHaveChildvalidator_throws_when_collection_property_Does_not_hav'
        'e_child_validator',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0003538
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.AbstractValidatorTester',
      test_name='OverridePropertyName_with_lambda_should_override_property_name',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0003832
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.RulesetTests',
      test_name='Executes_all_rules',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0007106
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.RuleBuilderTests',
      test_name='Calling_ValidateAsync_should_delegate_to_underlying_sync_validator',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0735933
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.SharedConditionTests',
      test_name='Does_not_execute_customasync_Rule_when_async_condition_false',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0008363
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ValidatorTesterTester',
      test_name='Expected_message_check',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0006922
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.NotEmptyTester',
      test_name='Fails_for_array',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.000465
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ScalePrecisionValidatorTests',
      test_name='Scale_precision_should_be_valid',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0003178
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ValidatorDescriptorTester',
      test_name='Gets_validators_for_property',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0001789
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.CustomMessageFormatTester',
      test_name='Uses_custom_delegate_for_building_message_only_for_specific_validator',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0003785
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ChainedValidationTester',
      test_name='Explicitly_included_properties_should_be_propagated_to_nested_validat'
        'ors_using_strings',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0001753
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ForEachRuleTests',
      test_name='Correctly_gets_collection_indices_async',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.000699
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.CascadingFailuresTester',
      test_name='Validation_continues_to_second_validator_when_first_validator_succeed'
        's_and_cascade_set_to_stop_legacy',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0002155
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.LengthValidatorTests',
      test_name='When_the_text_is_larger_than_the_lambda_range_then_the_validator_shou'
        'ld_fail',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0003557
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.InheritanceValidatorTest',
      test_name='Validates_inheritance_async',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0012652
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.CustomValidatorTester',
      test_name='New_custom_uses_empty_property_name_for_model_level_rule',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0002515
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.LessThanValidatorTester',
      test_name='Comparison_type',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=8.94e-05
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.LocalisedMessagesTester',
      test_name='Correctly_assigns_default_localized_error_message',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0011647
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.LanguageManagerTests',
      test_name='Gets_translation_for_specific_culture',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=9.89e-05
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ExclusiveBetweenValidatorTests',
      test_name='When_the_text_is_larger_than_the_range_then_the_validator_should_fail',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0005079
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.PropertyChainTests',
      test_name='Creates_from_expression',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0001276
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ExactLengthValidatorTester',
      test_name='Min_and_max_properties_should_be_set',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=7.07e-05
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ValidateAndThrowTester',
      test_name='Populates_errors',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0003478
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.AbstractValidatorTester',
      test_name='OverridePropertyName_should_override_property_name',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0001676
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ScalePrecisionValidatorTests',
      test_name='Scale_precision_should_not_be_valid_when_ignoring_trailing_zeroes',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0004372
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.LocalisedNameTester',
      test_name='Uses_localized_name',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0003024
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.StringEnumValidatorTests',
      test_name='IsValidTests_CaseSensitive_CaseIncorrect',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0001363
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.SharedConditionTests',
      test_name='Executes_customasync_rule_when_condition_true',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0014208
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.DefaultValidatorExtensionTester',
      test_name='MustAsync_should_not_throw_InvalidCastException',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0104516
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.LessThanOrEqualToValidatorTester',
      test_name='Comparison_property_uses_custom_resolver',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0010333
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.SharedConditionTests',
      test_name='Shared_async_When_is_not_applied_to_grouped_rules_when_initial_predic'
        'ate_is_false',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0004089
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ValidatorTesterTester',
      test_name='Unexpected_message_check(withoutErrMsg: "bar", errMessages: ["foo", '
        '"bar"])',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0001797
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.SharedConditionTests',
      test_name='Does_not_execute_custom_Rule_when_async_condition_false',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.000904
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.DefaultValidatorExtensionTester',
      test_name='LessThanOrEqual_should_create_LessThanOrEqualValidator_with_lambda',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0005095
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.EmptyTester',
      test_name='When_there_is_a_value_then_the_validator_should_fail',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0001989
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.InclusiveBetweenValidatorTests',
      test_name='When_the_to_is_smaller_than_the_from_then_the_validator_should_throw_'
        'for_strings',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0001329
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ValidatorTesterTester',
      test_name='ShouldHaveValidationError_model_async_throws',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0011585
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.LanguageManagerTests',
      test_name='Gets_translation_for_bosnian_latin_culture(cultureName: "bs")',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.000661
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.CollectionValidatorWithParentTests',
      test_name='Condition_should_work_with_child_collection',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0007357
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ExclusiveBetweenValidatorTests',
      test_name='When_the_value_is_between_the_range_specified_then_the_validator_shou'
        'ld_pass_for_strings',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0002261
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ExclusiveBetweenValidatorTests',
      test_name='When_the_value_is_exactly_the_size_of_the_upper_bound_then_the_valida'
        'tor_should_fail',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0002263
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.RuleBuilderTests',
      test_name='PropertyDescription_should_return_custom_property_name',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0006558
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ExtensionTester',
      test_name='Should_return_null_for_non_member_expressions',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0001368
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.RuleBuilderTests',
      test_name='Property_should_return_property_being_validated',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=8.16e-05
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ForEachRuleTests',
      test_name='Condition_should_work_with_child_collection',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0003728
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ConditionTests',
      test_name='Validation_should_succeed_when_condition_does_not_match',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0002873
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.MessageFormatterTests',
      test_name='Adds_PropertyName_to_message',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=7.79e-05
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.LengthValidatorTests',
      test_name='When_the_text_is_exactly_the_size_of_the_lower_bound_then_the_validat'
        'or_should_pass',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0002191
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.EmailValidatorTests',
      test_name='Valid_email_addresses_aspnetcore_compatible(email: '
        '"firstName.lastName@someDomain.com")',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=1.91e-05
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.CascadingFailuresTester',
      test_name='Validation_stops_on_failure_when_set_to_Continue_and_overriden_at_rul'
        'e_level',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0002008
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.LengthValidatorTests',
      test_name='When_the_text_is_exactly_the_size_of_the_lambda_lower_bound_then_the_'
        'validator_should_pass',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0003377
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.InclusiveBetweenValidatorTests',
      test_name='When_the_value_is_exactly_the_size_of_the_upper_bound_then_the_valida'
        'tor_should_pass',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0002097
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.EmailValidatorTests',
      test_name='Fails_email_validation_aspnetcore_compatible(email: '
        '"someName@a@b.com")',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=2.27e-05
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.InclusiveBetweenValidatorTests',
      test_name='When_the_text_is_larger_than_the_range_then_the_validator_should_fail',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0002468
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.RuleDependencyTests',
      test_name='Dependent_rules_inside_when',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.00114
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.RuleBuilderTests',
      test_name='Rule_for_a_non_memberexpression_should_not_generate_property_name',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0003533
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.SharedConditionTests',
      test_name='Shared_async_When_is_applied_to_grouped_rules_when_initial_predicate_'
        'is_true',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.000946
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.CascadingFailuresTester',
      test_name='Validation_continues_to_second_validator_when_first_validator_succeed'
        's_and_cascade_set_to_stop_async',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.000987
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.RulesetTests',
      test_name='Ruleset_selection_should_not_cascade_downwards_when_set_on_property',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0009641
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ExclusiveBetweenValidatorTests',
      test_name='When_the_value_is_exactly_the_size_of_the_lower_bound_then_the_valida'
        'tor_should_fail',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0002839
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ChainedValidationTester',
      test_name='Separate_validation_on_chained_property_valid',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0002025
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.AbstractValidatorTester',
      test_name='WhenPreValidationReturnsTrue_ValidatorsGetHit_ValidateAsync',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0015404
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ValidatorTesterTester',
      test_name='ShouldNotHAveValidationError_should_not_throw_When_there_are_no_error'
        's_with_preconstructed_object',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.000721
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.InclusiveBetweenValidatorTests',
      test_name='When_the_value_is_exactly_the_size_of_the_lower_bound_then_the_valida'
        'tor_should_pass',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0001963
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.CascadingFailuresTester',
      test_name='Validation_continues_on_failure_when_set_to_StopOnFirstFailure_at_val'
        'idator_level_and_overriden_at_rule_level',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0001937
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.MessageFormatterTests',
      test_name='Adds_value_to_message',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=5.83e-05
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ValidatorTesterTester',
      test_name='TestValidate_runs_async',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0007477
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.CascadingFailuresTester',
      test_name='Validation_stops_on_first_Failure_when_set_to_Continue_globally_and_o'
        'verriden_at_rule_level',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.000188
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ConditionTests',
      test_name='Condition_is_applied_to_all_validators_in_the_chain',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0003098
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.GreaterThanValidatorTester',
      test_name='Validates_with_nullable_when_property_not_null_cross_property',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0005453
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.SharedConditionTests',
      test_name='Shared_When_is_applied_to_grouped_rules_when_initial_predicate_is_tru'
        'e',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0001524
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.RuleDependencyTests',
      test_name='Dependent_rules_inside_ruleset',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0004097
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.InclusiveBetweenValidatorTests',
      test_name='When_the_value_is_exactly_the_size_of_the_upper_bound_then_the_valida'
        'tor_should_pass_for_strings',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0001956
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.CustomValidatorTester',
      test_name='Perserves_property_chain_using_custom',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0008351
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ValidatorTesterTester',
      test_name='Unexpected_message_check(withoutErrMsg: "bar", errMessages: [])',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0007346
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.DefaultValidatorExtensionTester',
      test_name='Empty_should_create_EmptyValidator',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0002993
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.OnFailureTests',
      test_name='ShouldHaveChildValidator_works_with_Include',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0002922
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ValidateAndThrowTester',
      test_name='ValidationException_provides_correct_message_when_appendDefaultMessag'
        'e_false',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0001514
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ExactLengthValidatorTester',
      test_name='When_the_text_is_an_exact_length_the_validator_should_pass',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0002146
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ValidateAndThrowTester',
      test_name='ValidationException_provides_correct_message_when_appendDefaultMessag'
        'e_true',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=9.92e-05
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.RuleBuilderTests',
      test_name='PropertyDescription_should_return_property_name_split',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0004031
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.GreaterThanOrEqualToValidatorTester',
      test_name='Should_fail_when_less_than_input',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0003948
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.CustomValidatorTester',
      test_name='New_Custom_within_ruleset',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0005423
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.StringEnumValidatorTests',
      test_name='IsValidTests_CaseInsensitive_CaseIncorrect',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0002316
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.AbstractValidatorTester',
      test_name='RuleForeach_with_null_instances',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0019478
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.AbstractValidatorTester',
      test_name='When_the_validators_fail_then_the_errors_Should_be_accessible_via_the'
        '_errors_property',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.00017
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.RuleBuilderTests',
      test_name='Should_set_custom_error',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0001428
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.CascadingFailuresTester',
      test_name='Validation_continues_on_failure_async',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0010423
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.RuleDependencyTests',
      test_name='Nested_dependent_rules_inside_ruleset',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0005315
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.RuleDependencyTests',
      test_name='Invokes_dependent_rule_if_parent_rule_passes',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0003376
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.CollectionValidatorWithParentTests',
      test_name='Should_work_with_top_level_collection_validator',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0007124
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.LessThanValidatorTester',
      test_name='Validates_with_nullable_when_property_is_null',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0003426
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.EmailValidatorTests',
      test_name='Valid_email_addresses_regex(email: "$A12345@example.com")',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=2.26e-05
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.DefaultValidatorExtensionTester',
      test_name='Must_should_create_PredicateValidator_with_PropertyValidatorContext',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0042745
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.MemberAccessorTests',
      test_name='SimpleFieldSet',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0004092
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.GreaterThanValidatorTester',
      test_name='Validates_with_nullable_when_property_is_null',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0005007
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.UserSeverityTester',
      test_name='Can_Provide_severity_for_item_in_collection',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0007448
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.DefaultValidatorExtensionTester',
      test_name='NotEqual_should_create_NotEqualValidator_with_explicit_value',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0003685
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.RuleBuilderTests',
      test_name='Should_set_custom_property_name',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0003705
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.LessThanOrEqualToValidatorTester',
      test_name='Validates_with_nullable_when_property_not_null_cross_property',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.000283
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.InclusiveBetweenValidatorTests',
      test_name='Validates_with_nullable_when_property_is_null',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0002167
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ExclusiveBetweenValidatorTests',
      test_name='When_the_text_is_larger_than_the_range_then_the_validator_should_fail'
        '_for_strings',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0002392
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ScalePrecisionValidatorTests',
      test_name='Scale_precision_should_be_valid_when_they_are_equal',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.000383
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ValidateAndThrowTester',
      test_name='Throws_exception_async',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0004271
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ExclusiveBetweenValidatorTests',
      test_name='When_the_value_is_exactly_the_size_of_the_lower_bound_then_the_valida'
        'tor_should_fail_for_strings',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0009095
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.RulesetTests',
      test_name='Includes_all_rulesets_async',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0010633
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.EqualValidatorTests',
      test_name='Should_succeed_on_case_insensitive_comparison',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0002418
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ValidatorTesterTester',
      test_name='ShouldHaveChildValidator_should_throw_when_property_has_a_different_c'
        'hild_validator',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0005867
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ChildRulesTests',
      test_name='Can_define_nested_rules_for_collection',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0016096
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ForEachRuleTests',
      test_name='Should_not_scramble_property_name_when_using_collection_validators_se'
        'veral_levels_deep',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0003437
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.CascadingFailuresTester',
      test_name='Validation_stops_on_first_failure',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0001706
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ForEachRuleTests',
      test_name='Can_specify_condition_for_individual_collection_elements',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0004461
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.PredicateValidatorTester',
      test_name='Should_fail_when_predicate_returns_false',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=9.17e-05
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.EnumValidatorTests',
      test_name='Flags_enum_valid_when_using_bitwise_value',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0192413
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ChainedValidationTester',
      test_name='Explicitly_included_properties_should_be_propagated_to_nested_validat'
        'ors',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0002691
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ValidatorTesterTester',
      test_name='ShouldHaveValidationErrorFor_takes_account_of_rulesets',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0007521
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.RulesetTests',
      test_name='Combines_rulesets_and_explicit_properties',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.000997
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.LessThanValidatorTester',
      test_name='Validates_against_property',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0012022
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ValidatorTesterTester',
      test_name='ShouldHaveChildValidator_should_not_throw_when_property_Does_have_chi'
        'ld_validator_and_expecting_a_basetype',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0004634
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.LanguageManagerTests',
      test_name='Can_replace_message',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0002451
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.EqualValidatorTests',
      test_name='Comparison_property_uses_custom_resolver',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0003829
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.EqualValidatorTests',
      test_name='Validates_against_property',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0002933
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.LengthValidatorTests',
      test_name='When_the_validator_fails_the_error_message_should_be_set',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0113406
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.AbstractValidatorTester',
      test_name='Should_validate_single_Field',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0002444
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.SharedConditionTests',
      test_name='Runs_otherwise_conditons_for_Unless',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0008404
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.EmailValidatorTests',
      test_name='Fails_email_validation_aspnetcore_compatible(email: "someName")',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=2.3e-05
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.MemberAccessorTests',
      test_name='Equality',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0010753
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.MemberAccessorTests',
      test_name='SimplePropertySet',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0004415
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.EmptyTester',
      test_name='When_value_is_null_validator_should_pass',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0002377
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ForEachRuleTests',
      test_name='Can_access_colletion_index_async',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0007781
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ChainedValidationTester',
      test_name='Chained_validator_should_not_be_invoked_on_null_property',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.000121
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.InheritanceValidatorTest',
      test_name='Validates_with_callback_accepting_derived_async',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0048985
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ComplexValidationTester',
      test_name='Can_directly_validate_multiple_fields_of_same_type',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0034497
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.InclusiveBetweenValidatorTests',
      test_name='When_the_text_is_larger_than_the_range_then_the_validator_should_fail'
        '_for_strings',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0002377
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.EmailValidatorTests',
      test_name='Valid_email_addresses_aspnetcore_compatible(email: '
        '"1234@someDomain.com")',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=3.07e-05
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ValidatorSelectorTests',
      test_name='Does_not_validate_other_property_using_expression',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0003211
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.StringEnumValidatorTests',
      test_name='When_validation_fails_the_default_error_should_be_set',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0001968
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.InheritanceValidatorTest',
      test_name='Validates_ruleset_async',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0016248
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.InheritanceValidatorTest',
      test_name='Validates_collection_async',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0040405
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ValidatorTesterTester',
      test_name='ShouldHaveValidationErrorFor_takes_account_of_rulesets_fluent_approac'
        'h',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0007776
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ChainingValidatorsTester',
      test_name='Should_create_multiple_validators',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0003311
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ValidatorTesterTester',
      test_name='ShouldNotHaveValidationError_should_throw_when_there_are_errors_with_'
        'preconstructed_object',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0023915
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.EmailValidatorTests',
      test_name='Valid_email_addresses_aspnetcore_compatible(email: '
        '"someName@1234.com")',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=1.58e-05
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.UserSeverityTester',
      test_name='Defaults_user_severity_to_error',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0001704
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.OnFailureTests',
      test_name='OnFailure_called_for_each_failed_rule',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.000567
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.InheritanceValidatorTest',
      test_name='Validates_ruleset',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0009577
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.SharedConditionTests',
      test_name='RuleSet_can_be_used_inside_async_condition',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0011754
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.DefaultValidatorExtensionTester',
      test_name='Equal_should_create_EqualValidator_with_explicit_value',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0003343
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.MessageFormatterTests',
      test_name='Adds_argument_and_custom_arguments',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=6.99e-05
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.CollectionValidatorWithParentTests',
      test_name='Validates_collection_asynchronously',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0014053
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.RegularExpressionValidatorTests',
      test_name='Uses_regex_object',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0004951
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.RuleBuilderTests',
      test_name='Should_throw_if_message_is_null',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0001371
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.SharedConditionTests',
      test_name='When_condition_executed_for_each_instance_of_RuleForEach_condition_sh'
        'ould_not_be_cached',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0006033
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.LanguageManagerTests',
      test_name='Uses_error_code_as_localization_key',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0003393
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.RegularExpressionValidatorTests',
      test_name='When_the_text_is_null_then_the_validator_should_pass',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=9.28e-05
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.InclusiveBetweenValidatorTests',
      test_name='When_the_validator_fails_the_error_message_should_be_set',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0002354
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.DefaultValidatorExtensionTester',
      test_name='GreaterThanOrEqual_should_create_GreaterThanOrEqualValidator_with_lam'
        'bda_with_other_Nullable',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0019589
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.MemberAccessorTests',
      test_name='Name',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0004323
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.EmptyTester',
      test_name='When_value_is_Default_for_type_validator_should_pass_int',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0003963
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.EmailValidatorTests',
      test_name='Valid_email_addresses_regex(email: "TestPerson@gmail.com")',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=8.05e-05
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ValidateAndThrowTester',
      test_name='Throws_exception',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0004234
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ValidatorTesterTester',
      test_name='ShouldHaveValidationError_should_throw_when_there_are_not_validation_'
        'errors__WhenAsyn_Is_Used(age: 17, cardNumber: "cardNumber")',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0006412
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.StringEnumValidatorTests',
      test_name='IsValidTests_CaseSensitive_CaseCorrect',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0012556
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.RegularExpressionValidatorTests',
      test_name='Can_access_expression_in_message_lambda',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0002801
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.EmailValidatorTests',
      test_name='Valid_email_addresses_aspnetcore_compatible(email: "\xa0'
        '@someDomain.com")',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=1.73e-05
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.RuleDependencyTests',
      test_name='Async_inside_dependent_rules_when_parent_rule_not_async',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.9925303
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.AbstractValidatorTester',
      test_name='WhenPreValidationReturnsFalse_ResultReturnToUserImmediatly_Validate(p'
        'reValidationResult: AnotherInt Test Message)',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=6.28e-05
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.RuleBuilderTests',
      test_name='Adding_a_validator_should_return_builder',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=7.14e-05
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.GreaterThanOrEqualToValidatorTester',
      test_name='Validates_nullable_with_nullable_property',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0003854
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.AbstractValidatorTester',
      test_name='When_the_Validators_pass_then_the_validatorRunner_should_return_true',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0001471
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.RegularExpressionValidatorTests',
      test_name='When_the_text_matches_the_lambda_regex_regular_expression_then_the_va'
        'lidator_should_pass',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0001215
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.MessageFormatterTests',
      test_name='Understands_date_formats',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0001748
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.MemberAccessorTests',
      test_name='ComplexPropertyGet',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0009033
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.EmailValidatorTests',
      test_name='Valid_email_addresses_regex(email: "\\"Fred Bloggs\\"@example.com")',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=2.58e-05
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.DefaultValidatorExtensionTester',
      test_name='Length_should_create_LengthValidator',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0002207
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.CollectionValidatorWithParentTests',
      test_name='Creates_validator_using_context_from_property_value',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0011184
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ExtensionTester',
      test_name='SplitPascalCase_should_return_null_when_input_is_null',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=3.14e-05
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ExtensionTester',
      test_name='Should_split_pascal_cased_member_name',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0006315
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.LocalisedMessagesTester',
      test_name='Formats_string_with_placeholders_when_you_cant_edit_the_string',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0002285
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.UserStateTester',
      test_name='Stores_user_state_against_validation_failure',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0011142
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ChainedValidationTester',
      test_name='Chained_validator_descriptor',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0002971
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ForEachRuleTests',
      test_name='RuleForEach_async_RunsTasksSynchronously',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0236497
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ValidatorSelectorTests',
      test_name='MemberNameValidatorSelector_returns_true_when_property_name_matches',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0002975
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ComplexValidationTester',
      test_name='Condition_should_work_with_complex_property',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0004359
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.TransformTests',
      test_name='Transforms_property_value',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0003746
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ValidatorTesterTester',
      test_name='ShouldNotHaveValidationError_should_throw_when_there_are_validation_e'
        'rrors_ruleforeach',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0009397
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.AbstractValidatorTester',
      test_name='Should_validate_public_Field',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0003435
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ValidatorTesterTester',
      test_name='ShouldHaveChildValidator_should_not_throw_when_property_Does_have_chi'
        'ld_validator',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0022892
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ForEachRuleTests',
      test_name='Can_validate_collection_using_validator_for_base_type',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0004768
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.GreaterThanOrEqualToValidatorTester',
      test_name='Comparison_type',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0002012
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ValidatorTesterTester',
      test_name='ShouldHaveValidationError_async_throws',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.001366
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.SharedConditionTests',
      test_name='Shared_async_When_respects_the_smaller_scope_of_a_inner_Unless_when_t'
        'he_inner_Unless_predicate_fails',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0029811
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.CollectionValidatorWithParentTests',
      test_name='Collection_should_be_explicitly_included_with_expression',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0006578
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.CascadingFailuresTester',
      test_name='Validation_stops_on_first_failure_when_set_to_StopOnFirstFailure_at_v'
        'alidator_level',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0002738
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.LessThanOrEqualToValidatorTester',
      test_name='Should_succeed_when_equal_to_input',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=7.26e-05
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ValidatorTesterTester',
      test_name='ShouldNotHaveValidationError_should_correctly_handle_explicitly_provi'
        'ding_object_to_validate',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0031438
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.DefaultValidatorExtensionTester',
      test_name='MustAsync_should_create_AsyncPredicateValidator_with_context',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0001972
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ConditionTests',
      test_name='Async_condition_is_applied_to_all_validators_in_the_chain_when_execut'
        'ed_synchronously',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0005363
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.EmailValidatorTests',
      test_name='Valid_email_addresses_regex(email: "testperson+label@gmail.com")',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=2.75e-05
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.CustomValidatorTester',
      test_name='New_CustomAsync_within_ruleset',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0008872
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ForEachRuleTests',
      test_name='Executes_rule_for_each_item_in_collection',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0003186
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.CascadingFailuresTester',
      test_name='Cascade_mode_can_be_set_after_validator_instantiated',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0001778
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.CascadingFailuresTester',
      test_name='Validation_stops_on_first_failure_async_legacy',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0008751
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.CustomValidatorTester',
      test_name='Runs_async_rule_synchronously_when_validator_invoked_synchronously',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0006956
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.CascadingFailuresTester',
      test_name='Validation_stops_on_first_Failure_when_set_to_Continue_globally_and_o'
        'verriden_at_rule_level_legacy',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.00023
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.SharedConditionTests',
      test_name='Condition_can_be_used_inside_ruleset',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0005964
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ValidateAndThrowTester',
      test_name='Does_not_throw_when_valid_and_a_ruleset_async',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0003892
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.GreaterThanValidatorTester',
      test_name='Comparison_property_uses_custom_resolver',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0004008
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.EmailValidatorTests',
      test_name='Fails_email_validation_aspnetcore_compatible(email: "")',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=3.14e-05
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ValidatorTesterTester',
      test_name='ShouldNotHaveValidationError_async_throws',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0022945
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.CascadingFailuresTester',
      test_name='Validation_continues_on_failure_when_set_to_Stop_globally_and_overrid'
        'en_at_rule_level_async',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0011028
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ForEachRuleTests',
      test_name='Uses_useful_error_message_when_used_on_non_property',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0004356
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ExclusiveBetweenValidatorTests',
      test_name='When_the_to_is_smaller_than_the_from_then_the_validator_should_throw_'
        'for_strings',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0001562
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ValidateAndThrowTester',
      test_name='Throws_exception_with_a_ruleset_async',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0011925
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.EqualValidatorTests',
      test_name='Should_succeed_on_case_insensitive_comparison_using_expression',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0002538
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ForEachRuleTests',
      test_name='When_runs_outside_RuleForEach_loop',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0004935
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.GreaterThanOrEqualToValidatorTester',
      test_name='Validates_with_nullable_when_property_not_null',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0002465
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ForEachRuleTests',
      test_name='Should_override_property_name',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0003821
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.EmptyTester',
      test_name='When_value_is_empty_string_validator_should_pass',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0002019
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.RuleBuilderTests',
      test_name='Should_throw_if_overriding_validator_provider_is_null',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0001555
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.DefaultValidatorExtensionTester',
      test_name='Equal_should_create_EqualValidator_with_lambda',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0006079
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.NotNullTester',
      test_name='When_the_validator_fails_the_error_message_should_be_set',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0002246
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.SharedConditionTests',
      test_name='Shared_async_When_is_applied_to_groupd_rules_when_initial_predicate_i'
        's_true_and_all_individual_rules_are_satisfied',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0004461
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.RuleBuilderTests',
      test_name='Should_build_property_name',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=5.59e-05
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.CreditCardValidatorTests',
      test_name='When_validation_fails_the_default_error_should_be_set',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0017932
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ExclusiveBetweenValidatorTests',
      test_name='When_the_to_is_smaller_than_the_from_then_the_validator_should_throw',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0003029
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.DefaultValidatorExtensionTester',
      test_name='ScalePrecision_should_create_ScalePrecisionValidator',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0020009
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ValidationResultTests',
      test_name='ToString_return_error_messages_with_newline_as_separator',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0003538
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ComplexValidationTester',
      test_name='Validates_child_validator_asynchronously',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0037362
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.LengthValidatorTests',
      test_name='When_the_text_is_smaller_than_the_lambda_range_then_the_validator_sho'
        'uld_fail',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0003612
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.SharedConditionTests',
      test_name='Rules_not_invoked_when_inverse_shared_condition_does_not_match',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0009262
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.InclusiveBetweenValidatorTests',
      test_name='When_the_value_is_between_the_range_specified_then_the_validator_shou'
        'ld_pass',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0003572
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ConditionTests',
      test_name='Validation_should_fail_when_async_condition_matches',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0007917
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ValidatorTesterTester',
      test_name='Can_use_indexer_in_string_message_inverse',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.000553
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ExtensionTester',
      test_name='Should_extract_member_from_member_expression',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.000113
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ComplexValidationTester',
      test_name='Explicitly_included_properties_should_be_propagated_to_nested_validat'
        'ors_using_strings',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0008307
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.LessThanValidatorTester',
      test_name='Validates_with_nullable_when_property_not_null',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0002586
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ValidatorSelectorTests',
      test_name='Does_not_validate_other_property',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0004189
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.RuleBuilderTests',
      test_name='Should_throw_if_validator_is_null',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0001458
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.AccessorCacheTests',
      test_name='Gets_accessor',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0003872
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.CascadingFailuresTester',
      test_name='Validation_continues_when_set_to_Continue_at_validator_level',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0002021
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.RegularExpressionValidatorTests',
      test_name='Uses_lazily_loaded_expression',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0003176
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.GreaterThanValidatorTester',
      test_name='Validates_with_nullable_when_property_is_null_cross_property',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0002669
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.LessThanValidatorTester',
      test_name='Validates_nullable_with_nullable_property',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.000773
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.InclusiveBetweenValidatorTests',
      test_name='When_the_value_is_between_the_range_specified_then_the_validator_shou'
        'ld_pass_for_strings',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.00022
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.InheritanceValidatorTest',
      test_name='Validates_with_callback',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0012889
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.OnFailureTests',
      test_name='WhenWithOnFailure_should_invoke_condition_on_async_inner_validator',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.000634
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.GreaterThanOrEqualToValidatorTester',
      test_name='Should_succeed_when_equal_to_input',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=7.8e-05
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.DefaultValidatorExtensionTester',
      test_name='ScalePrecision_should_create_ScalePrecisionValidator_with_ignore_trai'
        'ling_zeros',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0002146
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.LanguageManagerTests',
      test_name='Always_use_specific_language',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=6.66e-05
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.SharedConditionTests',
      test_name='Does_not_execute_custom_Rule_when_condition_false',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0008838
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ValidatorTesterTester',
      test_name='ShouldHaveValidationError_preconstructed_object_does_not_throw_for_un'
        'writable_property',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0008894
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ValidatorTesterTester',
      test_name='Model_level_check_fails_if_no_model_level_failures',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0005599
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.AbstractValidatorTester',
      test_name='Should_throw_when_rule_is_null',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0001178
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.AbstractValidatorTester',
      test_name='WhenPreValidationReturnsFalse_ResultReturnToUserImmediatly_ValidateAs'
        'ync(preValidationResult: AnotherInt Test Message)',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=5.78e-05
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.EmailValidatorTests',
      test_name='Valid_email_addresses_regex(email: "first.last@test.co.uk")',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=2.26e-05
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.RuleDependencyTests',
      test_name='Nested_dependent_rules_inside_ruleset_inside_method',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0007514
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.RulesetTests',
      test_name='Executes_multiple_rulesets',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0017933
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.NullTester',
      test_name='Passes_when_nullable_value_type_is_null',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0002748
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ValidatorSelectorTests',
      test_name='Includes_nested_property',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0006524
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.PredicateValidatorTester',
      test_name='Should_succeed_when_predicate_returns_true',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=7.66e-05
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.NotEmptyTester',
      test_name='When_value_is_whitespace_validation_should_fail',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0002178
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.ExclusiveBetweenValidatorTests',
      test_name='When_the_validator_fails_the_error_message_should_be_set_for_strings',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0002668
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.NullTester',
      test_name='NullValidator_should_fail_if_value_has_value',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0002075
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.CustomFailureActionTester',
      test_name='Passes_object_being_validated_to_action',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.000852
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.DefaultValidatorExtensionTester',
      test_name='NotEmpty_should_create_NotEmptyValidator',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0002803
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.CascadingFailuresTester',
      test_name='Validation_stops_on_first_failure_when_set_to_StopOnFirstFailure_at_v'
        'alidator_level_legacy',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0002253
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.EmailValidatorTests',
      test_name='Invalid_email_addressex_regex(email: "")',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0003859
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit/FluentValidation.Tests.trx',
      test_file=None,
      line=None,
      class_name='FluentValidation.Tests.GreaterThanOrEqualToValidatorTester',
      test_name='Validates_with_nullable_when_property_is_null',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0002299
    )
  ]
)