publish.unittestresults.ParsedUnitTestResults(
  files=1,
  errors=[],
  suites=11,
  suite_tests=28,
  suite_skipped=8,
  suite_failures=1,
  suite_errors=1,
  suite_time=0,
  suite_details=[
    publish.unittestresults.UnitTestSuite(
      name='NUnit.Tests.Assemblies.MockTestFixture',
      tests=10,
      skipped=4,
      failures=1,
      errors=1,
      stdout=None,
      stderr=None
    ),
    publish.unittestresults.UnitTestSuite(
      name='NUnit.Tests.BadFixture',
      tests=1,
      skipped=1,
      failures=0,
      errors=0,
      stdout=None,
      stderr=None
    ),
    publish.unittestresults.UnitTestSuite(
      name='NUnit.Tests.GenericMethod',
      tests=2,
      skipped=0,
      failures=0,
      errors=0,
      stdout=None,
      stderr=None
    ),
    publish.unittestresults.UnitTestSuite(
      name='NUnit.Tests.MethodWithParameters',
      tests=2,
      skipped=0,
      failures=0,
      errors=0,
      stdout=None,
      stderr=None
    ),
    publish.unittestresults.UnitTestSuite(
      name='NUnit.Tests.GenericFixture<Double>(11.5d)',
      tests=2,
      skipped=0,
      failures=0,
      errors=0,
      stdout=None,
      stderr=None
    ),
    publish.unittestresults.UnitTestSuite(
      name='NUnit.Tests.GenericFixture<Int32>(5)',
      tests=2,
      skipped=0,
      failures=0,
      errors=0,
      stdout=None,
      stderr=None
    ),
    publish.unittestresults.UnitTestSuite(
      name='NUnit.Tests.IgnoredFixture',
      tests=3,
      skipped=3,
      failures=0,
      errors=0,
      stdout=None,
      stderr=None
    ),
    publish.unittestresults.UnitTestSuite(
      name='NUnit.Tests.ParameterizedFixture(42)',
      tests=2,
      skipped=0,
      failures=0,
      errors=0,
      stdout=None,
      stderr=None
    ),
    publish.unittestresults.UnitTestSuite(
      name='NUnit.Tests.ParameterizedFixture(5)',
      tests=2,
      skipped=0,
      failures=0,
      errors=0,
      stdout=None,
      stderr=None
    ),
    publish.unittestresults.UnitTestSuite(
      name='NUnit.Tests.Singletons.OneTestCase',
      tests=1,
      skipped=0,
      failures=0,
      errors=0,
      stdout=None,
      stderr=None
    ),
    publish.unittestresults.UnitTestSuite(
      name='NUnit.Tests.TestAssembly.MockTestFixture',
      tests=1,
      skipped=0,
      failures=0,
      errors=0,
      stdout=None,
      stderr=None
    )
  ],
  cases=[
    publish.unittestresults.UnitTestCase(
      result_file='nunit3/jenkins/NUnit-correct.xml',
      test_file=None,
      line=None,
      class_name='',
      test_name='NUnit.Tests.Assemblies.MockTestFixture.FailingTest',
      result='failure',
      message='Intentional failure',
      content='\n                                                        at '
        'NUnit.Tests.Assemblies.MockTestFixture.FailingTest () [0x00000] in '
        '/home/charlie/Dev/NUnit/nunit-2.5/work/src/tests/mock-assembly/MockAs'
        'sembly.cs:121\n\n                                                    ',
      stdout=None,
      stderr=None,
      time=0.013
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit3/jenkins/NUnit-correct.xml',
      test_file=None,
      line=None,
      class_name='',
      test_name='NUnit.Tests.Assemblies.MockTestFixture.InconclusiveTest',
      result='skipped',
      message='No valid data',
      content=None,
      stdout=None,
      stderr=None,
      time=0.001
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit3/jenkins/NUnit-correct.xml',
      test_file=None,
      line=None,
      class_name='',
      test_name='NUnit.Tests.Assemblies.MockTestFixture.MockTest1',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit3/jenkins/NUnit-correct.xml',
      test_file=None,
      line=None,
      class_name='',
      test_name='NUnit.Tests.Assemblies.MockTestFixture.MockTest2',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit3/jenkins/NUnit-correct.xml',
      test_file=None,
      line=None,
      class_name='',
      test_name='NUnit.Tests.Assemblies.MockTestFixture.MockTest3',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.001
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit3/jenkins/NUnit-correct.xml',
      test_file=None,
      line=None,
      class_name='',
      test_name='NUnit.Tests.Assemblies.MockTestFixture.MockTest4',
      result='skipped',
      message='ignoring this test method for now',
      content=None,
      stdout=None,
      stderr=None,
      time=None
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit3/jenkins/NUnit-correct.xml',
      test_file=None,
      line=None,
      class_name='',
      test_name='NUnit.Tests.Assemblies.MockTestFixture.MockTest5',
      result='skipped',
      message='Method is not public',
      content=None,
      stdout=None,
      stderr=None,
      time=None
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit3/jenkins/NUnit-correct.xml',
      test_file=None,
      line=None,
      class_name='',
      test_name='NUnit.Tests.Assemblies.MockTestFixture.NotRunnableTest',
      result='skipped',
      message='No arguments were provided',
      content=None,
      stdout=None,
      stderr=None,
      time=None
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit3/jenkins/NUnit-correct.xml',
      test_file=None,
      line=None,
      class_name='',
      test_name='NUnit.Tests.Assemblies.MockTestFixture.TestWithException',
      result='error',
      message='System.ApplicationException : Intentional Exception',
      content='\n                                                        at '
        'NUnit.Tests.Assemblies.MockTestFixture.TestWithException () '
        '[0x00000] in '
        '/home/charlie/Dev/NUnit/nunit-2.5/work/src/tests/mock-assembly/MockAs'
        'sembly.cs:153\n\n                                                    ',
      stdout=None,
      stderr=None,
      time=0.001
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit3/jenkins/NUnit-correct.xml',
      test_file=None,
      line=None,
      class_name='',
      test_name='NUnit.Tests.Assemblies.MockTestFixture.TestWithManyProperties',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit3/jenkins/NUnit-correct.xml',
      test_file=None,
      line=None,
      class_name='',
      test_name='NUnit.Tests.BadFixture.SomeTest',
      result='skipped',
      message='No suitable constructor was found',
      content=None,
      stdout=None,
      stderr=None,
      time=None
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit3/jenkins/NUnit-correct.xml',
      test_file=None,
      line=None,
      class_name='',
      test_name='NUnit.Tests.FixtureWithTestCases.GenericMethod<Double>(9.2d,11.7d)',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.007
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit3/jenkins/NUnit-correct.xml',
      test_file=None,
      line=None,
      class_name='',
      test_name='NUnit.Tests.FixtureWithTestCases.GenericMethod<Int32>(2,4)',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.001
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit3/jenkins/NUnit-correct.xml',
      test_file=None,
      line=None,
      class_name='',
      test_name='NUnit.Tests.FixtureWithTestCases.MethodWithParameters(9,11)',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.003
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit3/jenkins/NUnit-correct.xml',
      test_file=None,
      line=None,
      class_name='',
      test_name='NUnit.Tests.FixtureWithTestCases.MethodWithParameters(2,2)',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit3/jenkins/NUnit-correct.xml',
      test_file=None,
      line=None,
      class_name='',
      test_name='NUnit.Tests.GenericFixture<Double>(11.5d).Test1',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit3/jenkins/NUnit-correct.xml',
      test_file=None,
      line=None,
      class_name='',
      test_name='NUnit.Tests.GenericFixture<Double>(11.5d).Test2',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit3/jenkins/NUnit-correct.xml',
      test_file=None,
      line=None,
      class_name='',
      test_name='NUnit.Tests.GenericFixture<Int32>(5).Test1',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit3/jenkins/NUnit-correct.xml',
      test_file=None,
      line=None,
      class_name='',
      test_name='NUnit.Tests.GenericFixture<Int32>(5).Test2',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit3/jenkins/NUnit-correct.xml',
      test_file=None,
      line=None,
      class_name='',
      test_name='NUnit.Tests.IgnoredFixture.Test1',
      result='skipped',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=None
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit3/jenkins/NUnit-correct.xml',
      test_file=None,
      line=None,
      class_name='',
      test_name='NUnit.Tests.IgnoredFixture.Test2',
      result='skipped',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=None
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit3/jenkins/NUnit-correct.xml',
      test_file=None,
      line=None,
      class_name='',
      test_name='NUnit.Tests.IgnoredFixture.Test3',
      result='skipped',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=None
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit3/jenkins/NUnit-correct.xml',
      test_file=None,
      line=None,
      class_name='',
      test_name='NUnit.Tests.ParameterizedFixture(42).Test1',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit3/jenkins/NUnit-correct.xml',
      test_file=None,
      line=None,
      class_name='',
      test_name='NUnit.Tests.ParameterizedFixture(42).Test2',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit3/jenkins/NUnit-correct.xml',
      test_file=None,
      line=None,
      class_name='',
      test_name='NUnit.Tests.ParameterizedFixture(5).Test1',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit3/jenkins/NUnit-correct.xml',
      test_file=None,
      line=None,
      class_name='',
      test_name='NUnit.Tests.ParameterizedFixture(5).Test2',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit3/jenkins/NUnit-correct.xml',
      test_file=None,
      line=None,
      class_name='',
      test_name='NUnit.Tests.Singletons.OneTestCase.TestCase',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0
    ),
    publish.unittestresults.UnitTestCase(
      result_file='nunit3/jenkins/NUnit-correct.xml',
      test_file=None,
      line=None,
      class_name='',
      test_name='NUnit.Tests.TestAssembly.MockTestFixture.MyTest',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0
    )
  ]
)