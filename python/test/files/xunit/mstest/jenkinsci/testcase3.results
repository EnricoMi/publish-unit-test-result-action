publish.unittestresults.ParsedUnitTestResults(
  files=1,
  errors=[],
  suites=1,
  suite_tests=3,
  suite_skipped=1,
  suite_failures=1,
  suite_errors=0,
  suite_time=288,
  suite_details=[
    publish.unittestresults.UnitTestSuite(
      name='Test collection for MyProject.Tests.SampleFact',
      tests=3,
      skipped=1,
      failures=1,
      errors=0,
      stdout=None,
      stderr=None
    )
  ],
  cases=[
    publish.unittestresults.UnitTestCase(
      result_file='mstest/jenkinsci/testcase3.xml',
      test_file=None,
      line=None,
      class_name='MyProject.Tests.SampleFact',
      test_name='FailedTest',
      result='failure',
      message='Assert.True() Failure',
      content='Assert.True() Failure   at MyProject.Tests.SampleFact.FailedTest() '
        'in '
        'c:\\Jenkins\\jobs\\my-project\\workspace\\MyProject\\MyProject.Tests\\Sample'
        'Fact.cs:line 16',
      stdout=None,
      stderr=None,
      time=14.0
    ),
    publish.unittestresults.UnitTestCase(
      result_file='mstest/jenkinsci/testcase3.xml',
      test_file=None,
      line=None,
      class_name='MyProject.Tests.SampleFact',
      test_name='SuccessfulTest',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=10.0
    ),
    publish.unittestresults.UnitTestCase(
      result_file='mstest/jenkinsci/testcase3.xml',
      test_file=None,
      line=None,
      class_name='MyProject.Tests.SampleFact',
      test_name='SkippedTest',
      result='skipped',
      message='On Purpose',
      content=None,
      stdout=None,
      stderr=None,
      time=0.0
    )
  ]
)