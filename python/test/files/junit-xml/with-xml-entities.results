publish.unittestresults.ParsedUnitTestResults(
  files=1,
  errors=[],
  suites=1,
  suite_tests=4,
  suite_skipped=2,
  suite_failures=1,
  suite_errors=1,
  suite_time=0,
  suite_details=[
    publish.unittestresults.UnitTestSuite(
      name=None,
      tests=4,
      skipped=2,
      failures=1,
      errors=1,
      stdout=None,
      stderr=None
    )
  ],
  cases=[
    publish.unittestresults.UnitTestCase(
      result_file='with-xml-entities.xml',
      test_file=None,
      line=None,
      class_name=None,
      test_name='Test with "quotes" in the test name',
      result='skipped',
      message='A message with "quotes"',
      content='Content with "quotes"',
      stdout=None,
      stderr=None,
      time=0.0
    ),
    publish.unittestresults.UnitTestCase(
      result_file='with-xml-entities.xml',
      test_file=None,
      line=None,
      class_name=None,
      test_name="Test with 'apostrophe' in the test name",
      result='failure',
      message="A message with 'apostrophes'",
      content="Content with 'apostrophes'",
      stdout=None,
      stderr=None,
      time=0.0
    ),
    publish.unittestresults.UnitTestCase(
      result_file='with-xml-entities.xml',
      test_file=None,
      line=None,
      class_name=None,
      test_name='Test with & in the test name',
      result='error',
      message='A message with &',
      content='Content with &',
      stdout=None,
      stderr=None,
      time=0.0
    ),
    publish.unittestresults.UnitTestCase(
      result_file='with-xml-entities.xml',
      test_file=None,
      line=None,
      class_name=None,
      test_name='Test with < and > in the test name',
      result='skipped',
      message='A message with < and >',
      content='Content with < and >',
      stdout=None,
      stderr=None,
      time=0.0
    )
  ]
)