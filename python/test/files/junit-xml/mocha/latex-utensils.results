publish.unittestresults.ParsedUnitTestResults(
  files=1,
  errors=[],
  suites=1,
  suite_tests=109,
  suite_skipped=0,
  suite_failures=0,
  suite_errors=0,
  suite_time=0,
  suite_details=[
    publish.unittestresults.UnitTestSuite(
      name='Mocha Tests',
      tests=109,
      skipped=0,
      failures=0,
      errors=0,
      stdout=None,
      stderr=None
    )
  ],
  cases=[
    publish.unittestresults.UnitTestCase(
      result_file='mocha/latex-utensils.xml',
      test_file=None,
      line=None,
      class_name='bibtexParser',
      test_name='parse a simple bib file',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.003
    ),
    publish.unittestresults.UnitTestCase(
      result_file='mocha/latex-utensils.xml',
      test_file=None,
      line=None,
      class_name='bibtexParser',
      test_name='parse fields ending ,',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0
    ),
    publish.unittestresults.UnitTestCase(
      result_file='mocha/latex-utensils.xml',
      test_file=None,
      line=None,
      class_name='bibtexParser',
      test_name='parse an entry with only key',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0
    ),
    publish.unittestresults.UnitTestCase(
      result_file='mocha/latex-utensils.xml',
      test_file=None,
      line=None,
      class_name='bibtexParser',
      test_name='parse bib with comments',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.001
    ),
    publish.unittestresults.UnitTestCase(
      result_file='mocha/latex-utensils.xml',
      test_file=None,
      line=None,
      class_name='bibtexParser',
      test_name='parse only @comment',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0
    ),
    publish.unittestresults.UnitTestCase(
      result_file='mocha/latex-utensils.xml',
      test_file=None,
      line=None,
      class_name='bibtexParser',
      test_name='parse @comment @article @comment',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0
    ),
    publish.unittestresults.UnitTestCase(
      result_file='mocha/latex-utensils.xml',
      test_file=None,
      line=None,
      class_name='bibtexParser',
      test_name='parse bib with abbreviation',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.001
    ),
    publish.unittestresults.UnitTestCase(
      result_file='mocha/latex-utensils.xml',
      test_file=None,
      line=None,
      class_name='bibtexParser',
      test_name='parse entry with empty citeky',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0
    ),
    publish.unittestresults.UnitTestCase(
      result_file='mocha/latex-utensils.xml',
      test_file=None,
      line=None,
      class_name='bibtexParser',
      test_name='parse entry with command',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0
    ),
    publish.unittestresults.UnitTestCase(
      result_file='mocha/latex-utensils.xml',
      test_file=None,
      line=None,
      class_name='bibtexParser',
      test_name='parse entry with command',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.001
    ),
    publish.unittestresults.UnitTestCase(
      result_file='mocha/latex-utensils.xml',
      test_file=None,
      line=None,
      class_name='bibtexParser',
      test_name='parse entry with concat',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0
    ),
    publish.unittestresults.UnitTestCase(
      result_file='mocha/latex-utensils.xml',
      test_file=None,
      line=None,
      class_name='bibtexParser',
      test_name='parse entry with quotes',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0
    ),
    publish.unittestresults.UnitTestCase(
      result_file='mocha/latex-utensils.xml',
      test_file=None,
      line=None,
      class_name='bibtexParser',
      test_name='should not throw SyntaxError',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0
    ),
    publish.unittestresults.UnitTestCase(
      result_file='mocha/latex-utensils.xml',
      test_file=None,
      line=None,
      class_name='bibtexParser',
      test_name='should throw SyntaxError',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.002
    ),
    publish.unittestresults.UnitTestCase(
      result_file='mocha/latex-utensils.xml',
      test_file=None,
      line=None,
      class_name='latexLogParser',
      test_name='parse LaTeX log files',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.117
    ),
    publish.unittestresults.UnitTestCase(
      result_file='mocha/latex-utensils.xml',
      test_file=None,
      line=None,
      class_name='latexLogParser',
      test_name='parse LaTeX log files generated with -halt-on-error',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.071
    ),
    publish.unittestresults.UnitTestCase(
      result_file='mocha/latex-utensils.xml',
      test_file=None,
      line=None,
      class_name='latexParser matchers findAll',
      test_name='test latexParser.findAll',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.007
    ),
    publish.unittestresults.UnitTestCase(
      result_file='mocha/latex-utensils.xml',
      test_file=None,
      line=None,
      class_name='latexParser matchers findAllSeqences',
      test_name='test latexParser.findAllSeqences',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.001
    ),
    publish.unittestresults.UnitTestCase(
      result_file='mocha/latex-utensils.xml',
      test_file=None,
      line=None,
      class_name='latexParser matchers pattern',
      test_name='test latexParser.pattern',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.001
    ),
    publish.unittestresults.UnitTestCase(
      result_file='mocha/latex-utensils.xml',
      test_file=None,
      line=None,
      class_name='latexParser matchers pattern',
      test_name='test latexParser.pattern.match',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0
    ),
    publish.unittestresults.UnitTestCase(
      result_file='mocha/latex-utensils.xml',
      test_file=None,
      line=None,
      class_name='latexParser matchers pattern',
      test_name='test latexParser.pattern',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0
    ),
    publish.unittestresults.UnitTestCase(
      result_file='mocha/latex-utensils.xml',
      test_file=None,
      line=None,
      class_name='latexParser matchers latexParser findNodeAt',
      test_name='test latexParser.findNodeAt',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.001
    ),
    publish.unittestresults.UnitTestCase(
      result_file='mocha/latex-utensils.xml',
      test_file=None,
      line=None,
      class_name='latexParser matchers latexParser findNodeAt',
      test_name='test latexParser.findNodeAt',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.002
    ),
    publish.unittestresults.UnitTestCase(
      result_file='mocha/latex-utensils.xml',
      test_file=None,
      line=None,
      class_name='latexParser matchers latexParser findNodeAt',
      test_name='test latexParser.findNodeAt',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0
    ),
    publish.unittestresults.UnitTestCase(
      result_file='mocha/latex-utensils.xml',
      test_file=None,
      line=None,
      class_name='latexParser matchers latexParser findNodeAt',
      test_name='test latexParser.findNodeAt with line and column',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.001
    ),
    publish.unittestresults.UnitTestCase(
      result_file='mocha/latex-utensils.xml',
      test_file=None,
      line=None,
      class_name='latexParser matchers latexParser findNodeAt',
      test_name='test latexParser.findNodeAt with line and column for multiple lines',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0
    ),
    publish.unittestresults.UnitTestCase(
      result_file='mocha/latex-utensils.xml',
      test_file=None,
      line=None,
      class_name='latexParser matchers type',
      test_name='test that properties having a Node-related-type value are only '
        'content, args, and arg.',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0
    ),
    publish.unittestresults.UnitTestCase(
      result_file='mocha/latex-utensils.xml',
      test_file=None,
      line=None,
      class_name='latexParser matchers type',
      test_name='test the types of content, arg, and args.',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0
    ),
    publish.unittestresults.UnitTestCase(
      result_file='mocha/latex-utensils.xml',
      test_file=None,
      line=None,
      class_name='latexParser parse',
      test_name='parse \\begin{center}...',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0
    ),
    publish.unittestresults.UnitTestCase(
      result_file='mocha/latex-utensils.xml',
      test_file=None,
      line=None,
      class_name='latexParser parse',
      test_name='parse \\begin{center}\\endcommand',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0
    ),
    publish.unittestresults.UnitTestCase(
      result_file='mocha/latex-utensils.xml',
      test_file=None,
      line=None,
      class_name='latexParser parse',
      test_name='parse \\begin{center} \\begin{itemize}',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.002
    ),
    publish.unittestresults.UnitTestCase(
      result_file='mocha/latex-utensils.xml',
      test_file=None,
      line=None,
      class_name='latexParser parse',
      test_name='parse unbalanced \\begin',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.001
    ),
    publish.unittestresults.UnitTestCase(
      result_file='mocha/latex-utensils.xml',
      test_file=None,
      line=None,
      class_name='latexParser parse',
      test_name='parse unbalanced \\end',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0
    ),
    publish.unittestresults.UnitTestCase(
      result_file='mocha/latex-utensils.xml',
      test_file=None,
      line=None,
      class_name='latexParser parse',
      test_name='parse $1$',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.001
    ),
    publish.unittestresults.UnitTestCase(
      result_file='mocha/latex-utensils.xml',
      test_file=None,
      line=None,
      class_name='latexParser parse',
      test_name='parse \\url',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0
    ),
    publish.unittestresults.UnitTestCase(
      result_file='mocha/latex-utensils.xml',
      test_file=None,
      line=None,
      class_name='latexParser parse',
      test_name='parse \\url',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0
    ),
    publish.unittestresults.UnitTestCase(
      result_file='mocha/latex-utensils.xml',
      test_file=None,
      line=None,
      class_name='latexParser parse',
      test_name='parse \\href',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0
    ),
    publish.unittestresults.UnitTestCase(
      result_file='mocha/latex-utensils.xml',
      test_file=None,
      line=None,
      class_name='latexParser parse',
      test_name='parse \\href',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0
    ),
    publish.unittestresults.UnitTestCase(
      result_file='mocha/latex-utensils.xml',
      test_file=None,
      line=None,
      class_name='latexParser parse',
      test_name='parse \\verb|1|',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0
    ),
    publish.unittestresults.UnitTestCase(
      result_file='mocha/latex-utensils.xml',
      test_file=None,
      line=None,
      class_name='latexParser parse',
      test_name='parse \\verb*|1|',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.001
    ),
    publish.unittestresults.UnitTestCase(
      result_file='mocha/latex-utensils.xml',
      test_file=None,
      line=None,
      class_name='latexParser parse',
      test_name='parse \\verbatimfont{\\small}',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0
    ),
    publish.unittestresults.UnitTestCase(
      result_file='mocha/latex-utensils.xml',
      test_file=None,
      line=None,
      class_name='latexParser parse',
      test_name='parse \\begin{verbatim}...',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0
    ),
    publish.unittestresults.UnitTestCase(
      result_file='mocha/latex-utensils.xml',
      test_file=None,
      line=None,
      class_name='latexParser parse',
      test_name='parse \\begin{verbatim}... 02',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.001
    ),
    publish.unittestresults.UnitTestCase(
      result_file='mocha/latex-utensils.xml',
      test_file=None,
      line=None,
      class_name='latexParser parse',
      test_name='parse \\begin{verbatim*}...',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0
    ),
    publish.unittestresults.UnitTestCase(
      result_file='mocha/latex-utensils.xml',
      test_file=None,
      line=None,
      class_name='latexParser parse',
      test_name='parse \\begin{minted}...',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.001
    ),
    publish.unittestresults.UnitTestCase(
      result_file='mocha/latex-utensils.xml',
      test_file=None,
      line=None,
      class_name='latexParser parse',
      test_name='parse \\begin{lstlisting}...',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0
    ),
    publish.unittestresults.UnitTestCase(
      result_file='mocha/latex-utensils.xml',
      test_file=None,
      line=None,
      class_name='latexParser parse',
      test_name='parse comments',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.004
    ),
    publish.unittestresults.UnitTestCase(
      result_file='mocha/latex-utensils.xml',
      test_file=None,
      line=None,
      class_name='latexParser parse',
      test_name='parse \\begin{align}...',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.001
    ),
    publish.unittestresults.UnitTestCase(
      result_file='mocha/latex-utensils.xml',
      test_file=None,
      line=None,
      class_name='latexParser parse',
      test_name='parse \\begin{align}...',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0
    ),
    publish.unittestresults.UnitTestCase(
      result_file='mocha/latex-utensils.xml',
      test_file=None,
      line=None,
      class_name='latexParser parse',
      test_name='parse unbalanced \\begin{aligned}',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.001
    ),
    publish.unittestresults.UnitTestCase(
      result_file='mocha/latex-utensils.xml',
      test_file=None,
      line=None,
      class_name='latexParser parse',
      test_name='parse newenvironment command',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.001
    ),
    publish.unittestresults.UnitTestCase(
      result_file='mocha/latex-utensils.xml',
      test_file=None,
      line=None,
      class_name='latexParser parse',
      test_name='parse an optional argument having only spaces',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.001
    ),
    publish.unittestresults.UnitTestCase(
      result_file='mocha/latex-utensils.xml',
      test_file=None,
      line=None,
      class_name='latexParser parse',
      test_name='parse optional arguments having spaces',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.002
    ),
    publish.unittestresults.UnitTestCase(
      result_file='mocha/latex-utensils.xml',
      test_file=None,
      line=None,
      class_name='latexParser parse',
      test_name='parse optional arguments having a tilde',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.001
    ),
    publish.unittestresults.UnitTestCase(
      result_file='mocha/latex-utensils.xml',
      test_file=None,
      line=None,
      class_name='latexParser parse',
      test_name='parse \\node[label={abc}, efg]',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0
    ),
    publish.unittestresults.UnitTestCase(
      result_file='mocha/latex-utensils.xml',
      test_file=None,
      line=None,
      class_name='latexParser parse',
      test_name='parse \\def\\abc{abc}',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.001
    ),
    publish.unittestresults.UnitTestCase(
      result_file='mocha/latex-utensils.xml',
      test_file=None,
      line=None,
      class_name='latexParser parse',
      test_name='parse \\def\\abc [#1]#2 {#2#1abc}',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0
    ),
    publish.unittestresults.UnitTestCase(
      result_file='mocha/latex-utensils.xml',
      test_file=None,
      line=None,
      class_name='latexParser parse',
      test_name='parse a command whose name has @',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.001
    ),
    publish.unittestresults.UnitTestCase(
      result_file='mocha/latex-utensils.xml',
      test_file=None,
      line=None,
      class_name='latexParser parse',
      test_name='parse invalid commands without error',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0
    ),
    publish.unittestresults.UnitTestCase(
      result_file='mocha/latex-utensils.xml',
      test_file=None,
      line=None,
      class_name='latexParser parse',
      test_name='parse \\part',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0
    ),
    publish.unittestresults.UnitTestCase(
      result_file='mocha/latex-utensils.xml',
      test_file=None,
      line=None,
      class_name='latexParser parse',
      test_name='parse \\par\\par',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0
    ),
    publish.unittestresults.UnitTestCase(
      result_file='mocha/latex-utensils.xml',
      test_file=None,
      line=None,
      class_name='latexParser parse',
      test_name='parse \\newlineMyCommand',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.001
    ),
    publish.unittestresults.UnitTestCase(
      result_file='mocha/latex-utensils.xml',
      test_file=None,
      line=None,
      class_name='latexParser parse',
      test_name='parse \\linebreakMyCommand',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.001
    ),
    publish.unittestresults.UnitTestCase(
      result_file='mocha/latex-utensils.xml',
      test_file=None,
      line=None,
      class_name='latexParser parse',
      test_name='parse \\label{a_b}',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.002
    ),
    publish.unittestresults.UnitTestCase(
      result_file='mocha/latex-utensils.xml',
      test_file=None,
      line=None,
      class_name='latexParser parse',
      test_name='parse a_b',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.001
    ),
    publish.unittestresults.UnitTestCase(
      result_file='mocha/latex-utensils.xml',
      test_file=None,
      line=None,
      class_name='latexParser parse',
      test_name='parse a^b',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0
    ),
    publish.unittestresults.UnitTestCase(
      result_file='mocha/latex-utensils.xml',
      test_file=None,
      line=None,
      class_name='latexParser parse',
      test_name='parse $a^b$',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0
    ),
    publish.unittestresults.UnitTestCase(
      result_file='mocha/latex-utensils.xml',
      test_file=None,
      line=None,
      class_name='latexParser parse',
      test_name='parse $a^b$ with {enableMathCharacterLocation: true}',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.004
    ),
    publish.unittestresults.UnitTestCase(
      result_file='mocha/latex-utensils.xml',
      test_file=None,
      line=None,
      class_name='latexParser parse',
      test_name='parse ~',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0
    ),
    publish.unittestresults.UnitTestCase(
      result_file='mocha/latex-utensils.xml',
      test_file=None,
      line=None,
      class_name='latexParser parse',
      test_name='should throw SyntaxError',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.002
    ),
    publish.unittestresults.UnitTestCase(
      result_file='mocha/latex-utensils.xml',
      test_file=None,
      line=None,
      class_name='latexParser parse',
      test_name='parse $ a ^ b $',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.003
    ),
    publish.unittestresults.UnitTestCase(
      result_file='mocha/latex-utensils.xml',
      test_file=None,
      line=None,
      class_name='latexParser parse',
      test_name='parse $\\left(1\\right]$',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.001
    ),
    publish.unittestresults.UnitTestCase(
      result_file='mocha/latex-utensils.xml',
      test_file=None,
      line=None,
      class_name='latexParser parse',
      test_name='parse $\\left.1\\right]$',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0
    ),
    publish.unittestresults.UnitTestCase(
      result_file='mocha/latex-utensils.xml',
      test_file=None,
      line=None,
      class_name='latexParser parse',
      test_name='parse { }, including only spaces',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.001
    ),
    publish.unittestresults.UnitTestCase(
      result_file='mocha/latex-utensils.xml',
      test_file=None,
      line=None,
      class_name='latexParser parse',
      test_name='parse $ $, including only spaces',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0
    ),
    publish.unittestresults.UnitTestCase(
      result_file='mocha/latex-utensils.xml',
      test_file=None,
      line=None,
      class_name='latexParser parse',
      test_name='parse \\( \\)',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0
    ),
    publish.unittestresults.UnitTestCase(
      result_file='mocha/latex-utensils.xml',
      test_file=None,
      line=None,
      class_name='latexParser parse',
      test_name='parse \\[ \\]',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0
    ),
    publish.unittestresults.UnitTestCase(
      result_file='mocha/latex-utensils.xml',
      test_file=None,
      line=None,
      class_name='latexParser parse',
      test_name='parse $$ $$',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.001
    ),
    publish.unittestresults.UnitTestCase(
      result_file='mocha/latex-utensils.xml',
      test_file=None,
      line=None,
      class_name='latexParser parse',
      test_name='parse \\begin{align} \\end{align}',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0
    ),
    publish.unittestresults.UnitTestCase(
      result_file='mocha/latex-utensils.xml',
      test_file=None,
      line=None,
      class_name='latexParser parse',
      test_name='parse \\begin{align} \\begin{aligned}',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0
    ),
    publish.unittestresults.UnitTestCase(
      result_file='mocha/latex-utensils.xml',
      test_file=None,
      line=None,
      class_name='latexParser parse',
      test_name='parse \\begin{align} \\begin{alignedat}',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.001
    ),
    publish.unittestresults.UnitTestCase(
      result_file='mocha/latex-utensils.xml',
      test_file=None,
      line=None,
      class_name='latexParser parse',
      test_name='parse unbalanced \\begin{aligned}',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0
    ),
    publish.unittestresults.UnitTestCase(
      result_file='mocha/latex-utensils.xml',
      test_file=None,
      line=None,
      class_name='latexParser parse',
      test_name='parse unbalanced \\end{aligned}',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.002
    ),
    publish.unittestresults.UnitTestCase(
      result_file='mocha/latex-utensils.xml',
      test_file=None,
      line=None,
      class_name='latexParser parse',
      test_name='parse preamble',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.001
    ),
    publish.unittestresults.UnitTestCase(
      result_file='mocha/latex-utensils.xml',
      test_file=None,
      line=None,
      class_name='latexParser parse',
      test_name='parse empty preamble',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0
    ),
    publish.unittestresults.UnitTestCase(
      result_file='mocha/latex-utensils.xml',
      test_file=None,
      line=None,
      class_name='latexParser parse 2',
      test_name='parse \\"\\i',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.001
    ),
    publish.unittestresults.UnitTestCase(
      result_file='mocha/latex-utensils.xml',
      test_file=None,
      line=None,
      class_name='latexParser parse 2',
      test_name='parse Sch\\"onbrunner Schlo\\ss{} Stra\\ss e',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0
    ),
    publish.unittestresults.UnitTestCase(
      result_file='mocha/latex-utensils.xml',
      test_file=None,
      line=None,
      class_name='latexParser parse 2',
      test_name='parse a\\\\b c\\newline',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.001
    ),
    publish.unittestresults.UnitTestCase(
      result_file='mocha/latex-utensils.xml',
      test_file=None,
      line=None,
      class_name='latexParser parse 2',
      test_name='parse space + \\begin{center}',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0
    ),
    publish.unittestresults.UnitTestCase(
      result_file='mocha/latex-utensils.xml',
      test_file=None,
      line=None,
      class_name='latexParser parse 2',
      test_name='parse { a }d',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0
    ),
    publish.unittestresults.UnitTestCase(
      result_file='mocha/latex-utensils.xml',
      test_file=None,
      line=None,
      class_name='latexParser parse 2',
      test_name='parse x {a} { b }d',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.001
    ),
    publish.unittestresults.UnitTestCase(
      result_file='mocha/latex-utensils.xml',
      test_file=None,
      line=None,
      class_name='latexParser stringify',
      test_name='test latexParser.stringify a b',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0
    ),
    publish.unittestresults.UnitTestCase(
      result_file='mocha/latex-utensils.xml',
      test_file=None,
      line=None,
      class_name='latexParser stringify',
      test_name='test latexParser.stringify a  b',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.001
    ),
    publish.unittestresults.UnitTestCase(
      result_file='mocha/latex-utensils.xml',
      test_file=None,
      line=None,
      class_name='latexParser stringify',
      test_name='test latexParser.stringify a_b',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0
    ),
    publish.unittestresults.UnitTestCase(
      result_file='mocha/latex-utensils.xml',
      test_file=None,
      line=None,
      class_name='latexParser stringify',
      test_name='test latexParser.stringify a\\nb',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0
    ),
    publish.unittestresults.UnitTestCase(
      result_file='mocha/latex-utensils.xml',
      test_file=None,
      line=None,
      class_name='latexParser stringify',
      test_name='test latexParser.stringify newcommand 01',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0
    ),
    publish.unittestresults.UnitTestCase(
      result_file='mocha/latex-utensils.xml',
      test_file=None,
      line=None,
      class_name='latexParser stringify',
      test_name='test latexParser.stringify newcommand 02',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.001
    ),
    publish.unittestresults.UnitTestCase(
      result_file='mocha/latex-utensils.xml',
      test_file=None,
      line=None,
      class_name='latexParser stringify',
      test_name='test latexParser.stringify newcommand 03',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.008
    ),
    publish.unittestresults.UnitTestCase(
      result_file='mocha/latex-utensils.xml',
      test_file=None,
      line=None,
      class_name='latexParser stringify',
      test_name='test latexParser.stringify with lineBreak 01',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0
    ),
    publish.unittestresults.UnitTestCase(
      result_file='mocha/latex-utensils.xml',
      test_file=None,
      line=None,
      class_name='latexParser stringify',
      test_name='test latexParser.stringify with lineBreak 02',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.001
    ),
    publish.unittestresults.UnitTestCase(
      result_file='mocha/latex-utensils.xml',
      test_file=None,
      line=None,
      class_name='latexParser stringify',
      test_name='test stringify a_b',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0
    ),
    publish.unittestresults.UnitTestCase(
      result_file='mocha/latex-utensils.xml',
      test_file=None,
      line=None,
      class_name='latexParser stringify',
      test_name='test stringify $a^b$',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0
    ),
    publish.unittestresults.UnitTestCase(
      result_file='mocha/latex-utensils.xml',
      test_file=None,
      line=None,
      class_name='latexParser stringify',
      test_name='test stringify $ \\sin x$',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0
    ),
    publish.unittestresults.UnitTestCase(
      result_file='mocha/latex-utensils.xml',
      test_file=None,
      line=None,
      class_name='latexParser stringify',
      test_name='test stringify \\def\\abc [#1]#2 {#2#1abc}',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.001
    ),
    publish.unittestresults.UnitTestCase(
      result_file='mocha/latex-utensils.xml',
      test_file=None,
      line=None,
      class_name='latexParser stringify',
      test_name='test stringify \\url',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0
    ),
    publish.unittestresults.UnitTestCase(
      result_file='mocha/latex-utensils.xml',
      test_file=None,
      line=None,
      class_name='latexParser stringify',
      test_name='test stringify \\href[]{}{}',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.001
    ),
    publish.unittestresults.UnitTestCase(
      result_file='mocha/latex-utensils.xml',
      test_file=None,
      line=None,
      class_name='latexParser stringify',
      test_name='test stringify \\href{}{}',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0
    ),
    publish.unittestresults.UnitTestCase(
      result_file='mocha/latex-utensils.xml',
      test_file=None,
      line=None,
      class_name='latexParser other',
      test_name='test type guard',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0
    ),
    publish.unittestresults.UnitTestCase(
      result_file='mocha/latex-utensils.xml',
      test_file=None,
      line=None,
      class_name='latexParser other',
      test_name='test type guard with assingment and never type',
      result='success',
      message=None,
      content=None,
      stdout=None,
      stderr=None,
      time=0.0
    )
  ]
)