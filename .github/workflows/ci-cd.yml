name: CI/CD

on: [push, pull_request_target]

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    # always run on push events, but only run on pull_request_target event when pull request pulls from fork repository
    # for pull requests within the same repository, the pull event is sufficient
    if: >
      github.event_name == 'push' ||
      github.event_name == 'pull_request_target' && github.event.pull_request.head.repo.full_name != github.repository

    steps:
    - name: Setup Ubuntu
      run: sudo apt-get install language-pack-en language-pack-de

    - name: Setup Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.6

    - name: Checkout
      uses: actions/checkout@v2

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade --force --no-cache-dir pip
        pip install --force --no-cache-dir -r requirements.txt
        pip install --force --no-cache-dir pytest mock

    - name: PyTest
      env:
        PYTHONPATH: ..
      run: |
        cd test
        python -m pytest --continue-on-collection-errors --junit-xml ../test-results/pytest.xml

    - name: Unit Test Results
      uses: EnricoMi/publish-unit-test-result-action@master
      if: always()
      with:
        check_name: Unit Test Results
        github_token: ${{ secrets.GITHUB_TOKEN }}
        files: "test-results/*.xml"
        report_individual_runs: true
        deduplicate_classes_by_file_name: false
        log_level: DEBUG

    - name: Upload Test Results
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: Unit Test Results
        path: |
          test-results/*.xml
          unit-test-results.json

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Run Buildx
      run: docker buildx build --output "type=image,push=false" .

  deploy:
    name: Deploy to GitHub
    needs: build-and-test

    # only deploy pushed tags, but not on forked repositories
    if: >
      github.event_name == 'push' &&
      startsWith(github.ref, 'refs/tags/v') &&
      github.repository_owner == 'EnricoMi'

    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Docker meta
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v1
        with:
          images: ghcr.io/EnricoMi/publish-unit-test-result-action
          tag-sha: true
          tag-semver: |
            {{raw}}
            v{{major}}.{{minor}}
            v{{major}}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          pull: true
          push: true
